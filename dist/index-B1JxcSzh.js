var B=Object.defineProperty;var a=(t,e)=>B(t,"name",{value:e,configurable:!0});import _ from"yaml";import{glob as P}from"glob";import{readFile as w,writeFile as L,access as G,mkdir as K}from"node:fs/promises";import W from"@anthropic-ai/sdk";import{resolve as T,dirname as H}from"node:path";import z from"openai";async function $(t,e,n="File"){let s=null,i="";if(t)try{i=T(t),s=await w(i,{encoding:"utf-8"})}catch{throw new Error(`${n} not found, see --help for details`)}else{for(const o of e.formats)try{i=T(e.name+"."+o),s=await w(i,{encoding:"utf-8"});break}catch{continue}if(s===null)throw new Error(`${n} not found, see --help for details`)}return{content:s,format:i.split(".").pop()??""}}a($,"loadFile");function X(t,e){t=t.replace("**/*","**");const n=/(?<asterisks>\*{1,2})(?<extension>\.[^\\/]+)?/,s=t.match(n);if(s){let i="";return s.groups?.asterisks.length==1?i+=e.fileNameStem:i+=e.directoryPath+e.fileNameStem,s.groups?.extension?i+=s.groups.extension:i+=e.fileExtension,t.replace(s[0],i)}return t}a(X,"replaceFilePattern");function Y(t){const e=/(?<name>[^\\/]+)(?<extension>\.[^\\/]+)$/,n=t.match(e);return n&&n.length>0&&n.groups?{absolutePath:t,directoryPath:t.replace(n[0],""),fileExtension:n.groups.extension,fileNameStem:n.groups.name,fullFileName:n[0]}:null}a(Y,"pathToComponents");async function Q(t,e="."){try{return(await P(`${e}/${t}.*`)).length>0}catch{return!1}}a(Q,"fileExists");async function O(t){const e=H(t);try{await G(e)}catch{await K(e),await O(e)}}a(O,"ensureDirectoryExistence");async function Z(t,e){await O(t),await L(t,e)}a(Z,"writeFileWithDirectories");const j="ax.job",V=["yaml","yml","json"];async function ee(t,e,n){const{content:s,format:i}=await $(t,{name:j,formats:V},"Job File");let o=null;if(i==="json")o=JSON.parse(s);else if(i==="yaml"||i==="yml")o=_.parse(s);else throw new Error("Invalid job file format");n?.debug?.log({kind:"heading",message:"The Job Object"}),n?.debug?.log(o);const r={value:""};if(te(o,r))return o;throw new Error(`The job file is not valid: ${r.value}`)}a(ee,"getJobConfig");function te(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(!ne(t.using,e))return e&&(e.value=`Invalid 'using' property: ${e?.value}`),!1;if(!t.jobs||typeof t.jobs!="object")return e&&(e.value="Missing or invalid 'jobs' property"),!1;for(const[n,s]of Object.entries(t.jobs))if(!ae(s,e))return e&&(e.value=`Invalid job '${n}': ${e?.value}`),!1;return!0}a(te,"isJobConfig");function ne(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine==="openai"?se(t,e):t.engine==="anthropic"?ie(t,e):t.engine==="ollama"?oe(t,e):(e&&(e.value="Invalid engine type. Must be 'openai', 'anthropic', or 'ollama'"),!1)}a(ne,"isUsing");function se(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="openai"?(e&&(e.value="Engine must be 'openai'"),!1):t["api-key"]!==void 0&&typeof t["api-key"]!="string"?(e&&(e.value="Property 'api-key' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}a(se,"isOpenAIUse");function ie(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="anthropic"?(e&&(e.value="Engine must be 'anthropic'"),!1):t["api-key"]!==void 0&&typeof t["api-key"]!="string"?(e&&(e.value="Property 'api-key' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}a(ie,"isAnthropicUse");function oe(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="ollama"?(e&&(e.value="Engine must be 'ollama'"),!1):t.url!==void 0&&typeof t.url!="string"?(e&&(e.value="Property 'url' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}a(oe,"isOllamaUse");function ae(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.type==="agent"?re(t,e):t.type==="batch"?S(t,e):(e&&(e.value="Job type must be 'agent' or 'batch'"),!1)}a(ae,"isJob");function re(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="agent")return e&&(e.value="Job type must be 'agent'"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const n of t.tools)if(typeof n!="string")return e&&(e.value="All tools must be strings"),!1}if(t.variables!==void 0){if(typeof t.variables!="object"||Array.isArray(t.variables))return e&&(e.value="Property 'variables' must be an object"),!1;for(const[n,s]of Object.entries(t.variables))if(typeof s!="string")return e&&(e.value=`Variable '${n}' must be a string`),!1}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let n=0;n<t.steps.length;n++)if(!I(t.steps[n],e))return e&&(e.value=`Invalid step at index ${n}: ${e?.value}`),!1;return!0}a(re,"isAgentJob");function S(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="batch")return e&&(e.value="Job type must be 'batch'"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const n of t.tools)if(typeof n!="string")return e&&(e.value="All tools must be strings"),!1}if(t.variables!==void 0){if(typeof t.variables!="object"||Array.isArray(t.variables))return e&&(e.value="Property 'variables' must be an object"),!1;for(const[n,s]of Object.entries(t.variables))if(typeof s!="string")return e&&(e.value=`Variable '${n}' must be a string`),!1}if(!Array.isArray(t.batch))return e&&(e.value="Property 'batch' must be an array"),!1;for(let n=0;n<t.batch.length;n++){const s=t.batch[n];if(!s||typeof s!="object")return e&&(e.value=`Batch item at index ${n} must be an object`),!1;if(s.type!=="files")return e&&(e.value=`Batch item at index ${n} must have type 'files'`),!1;if(typeof s.input!="string")return e&&(e.value=`Batch item at index ${n} must have a string 'input' property`),!1;if(s["skip-condition"]!==void 0){if(!Array.isArray(s["skip-condition"]))return e&&(e.value=`Batch item at index ${n} must have an array 'skip-condition' property`),!1;for(let i=0;i<s["skip-condition"].length;i++)if(!ue(s["skip-condition"][i],e))return e&&(e.value=`Invalid skip condition at index ${i} in batch item ${n}: ${e?.value}`),!1}}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let n=0;n<t.steps.length;n++)if(!I(t.steps[n],e))return e&&(e.value=`Invalid step at index ${n}: ${e?.value}`),!1;return!0}a(S,"isBatchJob");function ue(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.folder!="string"?(e&&(e.value="Property 'folder' must be a string"),!1):typeof t.contains!="string"?(e&&(e.value="Property 'contains' must be a string"),!1):!0}a(ue,"isSkipOptions");function I(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):!t.action||typeof t.action!="string"?(e&&(e.value="Step must have a string 'action' property"),!1):t.action==="chat"?C(t,e):t.action==="tool-call"?N(t,e):t.action==="tool-respond"?E(t,e):t.action==="write-to-disk"?F(t,e):t.action==="save-to-variables"?D(t,e):(e&&(e.value=`Unknown action type: ${t.action}`),!1)}a(I,"isStep");function C(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.action!=="chat")return e&&(e.value="Action must be 'chat'"),!1;if(typeof t.content!="string")return e&&(e.value="Property 'content' must be a string"),!1;if(t.system!==void 0&&typeof t.system!="string")return e&&(e.value="Property 'system' must be a string"),!1;if(t.replace!==void 0){if(!Array.isArray(t.replace))return e&&(e.value="Property 'replace' must be an array"),!1;for(let n=0;n<t.replace.length;n++)if(!le(t.replace[n],e))return e&&(e.value=`Invalid replace at index ${n}: ${e?.value}`),!1}return!0}a(C,"isChatAction");function N(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="tool-call"?(e&&(e.value="Action must be 'tool-call'"),!1):Array.isArray(t.toolCalls)?t.throttle!==void 0&&typeof t.throttle!="number"?(e&&(e.value="Property 'throttle' must be a number"),!1):!0:(e&&(e.value="Property 'toolCalls' must be an array"),!1)}a(N,"isToolAction");function E(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="tool-respond"?(e&&(e.value="Action must be 'tool-respond'"),!1):Array.isArray(t.toolCalls)?!0:(e&&(e.value="Property 'toolCalls' must be an array"),!1)}a(E,"isToolRespondAction");function F(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="write-to-disk"?(e&&(e.value="Action must be 'write-to-disk'"),!1):typeof t.output!="string"?(e&&(e.value="Property 'output' must be a string"),!1):!0}a(F,"isWriteToDiskAction");function D(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="save-to-variables"?(e&&(e.value="Action must be 'save-to-variables'"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}a(D,"isSaveVarAction");function le(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source==="variables"?U(t,e):t.source==="file"?ce(t,e):t.source==="many-files"?fe(t,e):t.source===void 0?U(t,e):(e&&(e.value="Property 'source' must be 'variables', 'file', or 'many-files'"),!1)}a(le,"isReplace");function U(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source!==void 0&&t.source!=="variables"?(e&&(e.value="Property 'source' must be 'variables' or undefined"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}a(U,"isReplaceVariables");function ce(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source!=="file"?(e&&(e.value="Property 'source' must be 'file'"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}a(ce,"isReplaceFile");function fe(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(typeof t.pattern!="string")return e&&(e.value="Property 'pattern' must be a string"),!1;if(t.source!=="many-files")return e&&(e.value="Property 'source' must be 'many-files'"),!1;if(typeof t.name!="string"&&!Array.isArray(t.name))return e&&(e.value="Property 'name' must be a string or an array of strings"),!1;if(Array.isArray(t.name)){for(let n=0;n<t.name.length;n++)if(typeof t.name[n]!="string")return e&&(e.value=`Name at index ${n} must be a string`),!1}return!0}a(fe,"isReplaceManyFiles");var f=(t=>(t[t.Stop=0]="Stop",t[t.Length=1]="Length",t[t.FunctionCall=2]="FunctionCall",t[t.Error=3]="Error",t))(f||{});function R(t){return Array.isArray(t)?t:[t]}a(R,"arrayify");function b(t){return t.slice(0,8)}a(b,"friendly");function pe(t){return new Promise(e=>setTimeout(e,t))}a(pe,"delay");async function J(t,e){try{const n=await w(e.name,"utf-8");t=t.replace(e.pattern,n)}catch(n){console.error(n)}return t}a(J,"fileReplacer");async function M(t,e,n){try{const s=R(e.name);let i="";for(const o of s){const r=await P(o);n?.debug?.log(`many-files parser. For glob "${o}", found ${r.length} files.`);const l=await Promise.all(r.map(async c=>{const u=await w(c,"utf-8");return c+`:
`+u}));i+=l.join(`
`)}t=t.replace(e.pattern,i)}catch(s){console.error(s)}return t}a(M,"manyFilesReplacer");function me(t,e){for(const[n,s]of Object.entries(e))t=t.replace(/\$\{(.*?)\}/g,(i,o)=>e[o]||"");return t}a(me,"replaceVariables");var h=(t=>(t.Latest="latest",t))(h||{});async function ye(t){const{step:e,chat:n,provider:s,stats:i,variables:o,options:r,recorder:l}=t;if(C(e)){let{content:p,system:m}=e;e.replace&&([p,m]=await de(e.replace,o,e.content,e.system,l)),m&&n.addSystem(m),n.addUser(p)}else if(E(e)){const m=o[h.Latest].map(d=>({id:d.id,content:JSON.stringify(d.results)}));n.addTools(m)}if(r?.dryRun)return l?.debug?.log(n),{action:"continue"};const u=await s.createChatCompletionRequest(n).execute();if(i.in+=u.usage.in,i.out+=u.usage.out,u.type==="success")switch(u.reason){case f.Stop:return u.message.content&&(n.addAssistant(u.message.content),o[h.Latest]=u.message.content),{action:"continue"};case f.Length:return{action:"error",error:new Error("Incomplete model output due to `max_tokens` parameter or token limit")};case f.FunctionCall:{let p=u.message;return u.message.content&&(n.addAssistant(p.content,p.toolCalls),o[h.Latest]=u.message.content),{action:"toolCall",toolCalls:p.toolCalls}}}if(l?.debug?.log(u),u.type==="error")return{action:"error",error:new Error(u.error.message)}}a(ye,"executeChatAction");async function de(t,e,n,s,i){for(const o of t)switch(o.source){case"file":n=await J(n,o),s&&(s=await J(s,o));break;case"many-files":n=await M(n,o,i),s&&(s=await M(s,o,i));break;default:n=n.replace(o.pattern,e[o.name]),s&&(s=s.replace(o.pattern,e[o.name]))}return[n,s]}a(de,"handleReplace");async function he(t){const{action:e,variables:n,options:s,recorder:i}=t;if(s.dryRun){i?.debug?.log("Dry run: no action was taken");return}const o=e.output,r=n[h.Latest];if(typeof r=="string"){let l="";o.includes("*")?l=X(o,n.file):l=me(o,n),await Z(l,r)}}a(he,"execWriteToDisk");function ge(t){const{action:e,variables:n,options:s,recorder:i}=t;if(s.dryRun){i?.debug?.log("Dry run: no action was taken");return}const o=n[h.Latest];typeof o=="string"&&(n[e.name]=o)}a(ge,"execSaveToVariables");async function ve(t){const{step:e,toolManager:n,variables:s,recorder:i}=t,o=e.toolCalls,r=[];for(const c of o)r.push(new Promise((u,p)=>{const m=n.tools[c.name];if(!m){p(`Tool not found: ${c.name}`);return}m(c.arguments).then(d=>u({id:c.id,results:d})).catch(p)}));const l=await Promise.all(r);s[h.Latest]=l,i?.debug?.log(l)}a(ve,"executeToolAction");class we{static{a(this,"Chat")}system;messages=[];tools=[];setToolSchemas(e){this.tools=e}addSystem(e){this.system=e}addUser(e){this.messages.push({role:"user",content:e})}addAssistant(e,n){this.messages.push({role:"assistant",content:e,toolCalls:n})}addTools(e){this.messages.push({role:"tool",content:e})}toOpenAI(){const e=[];this.system&&e.push({role:"system",content:this.system});const n=this.tools.length>0?this.tools.map(i=>({type:"function",function:i})):void 0,s=this.messages.map(i=>{switch(i.role){case"tool":return i.content.map(o=>({role:"tool",tool_call_id:o.id,content:o.content}));case"assistant":return{role:i.role,content:i.content,tool_calls:i.toolCalls.map(o=>({id:o.id,type:"function",function:{name:o.name,arguments:JSON.stringify(o.arguments)}}))};default:return{role:i.role,content:i.content}}}).flat(1/0);return{messages:[...e,...s],...n&&{tools:n}}}toAnthropic(){const e=this.messages.map(s=>{switch(s.role){case"assistant":const i=[];return i.push({type:"text",text:s.content}),s.toolCalls&&i.push(...s.toolCalls.map(o=>({type:"tool_use",id:o.id,name:o.name,input:o.arguments}))),{role:"assistant",content:i};case"tool":return{role:"user",content:s.content.map(o=>({type:"tool_result",tool_use_id:o.id,content:o.content}))};default:return{role:"user",content:s.content}}}),n=this.tools.map(s=>({name:s.name,description:s.description,input_schema:s.parameters}));return{system:this.system,messages:e,tools:n}}toString(){return JSON.stringify({system:this.system,messages:this.messages,tools:this.tools})}}const v={Running:"running",Success:"success",Fail:"fail"};var g=(t=>(t[t.Trace=10]="Trace",t[t.Debug=20]="Debug",t[t.Info=30]="Info",t[t.Warn=40]="Warn",t[t.Error=50]="Error",t[t.Fatal=60]="Fatal",t))(g||{});class be{static{a(this,"DynamicArrayIterator")}array;index=0;constructor(e){this.array=[...e]}*[Symbol.iterator](){for(;this.index<this.array.length;)yield[this.index,this.array[this.index]],this.index++}addItem(e){this.array.splice(this.index+1,0,e)}get length(){return this.array.length}}async function ke(t,e,n,s,i,o,r){const l=crypto.randomUUID(),{steps:c}=t;r.info.log({type:"task",id:l,status:v.Running,message:`[${b(l)}] Starting job`});const u=new we;if(t.tools){const d=n.getSchemas(t.tools);u.setToolSchemas(d)}if(t.variables)for(const[d,y]of Object.entries(t.variables))s[d]=y;let p=!1;const m=new be(c);for(const[d,y]of m)if(r.info.log({type:"task",status:v.Running,id:l,message:`[${b(l)}] Processing step ${d+1}: ${y.action}`}),C(y)||E(y)){const{action:k,error:x,toolCalls:A}=await ye({step:y,chat:u,provider:e,stats:o,variables:s,options:i,recorder:r});x&&(p=!0,console.error(x)),k=="toolCall"&&A&&(m.addItem({action:"tool-respond",toolCalls:A}),m.addItem({action:"tool-call",toolCalls:A}))}else if(N(y))try{await ve({step:y,toolManager:n,variables:s,options:i,recorder:r})}catch(k){p=!0,console.error(k)}else D(y)?ge({action:y,variables:s,options:i,recorder:r}):F(y)&&await he({action:y,variables:s,options:i,recorder:r});return p?r.info.log({type:"task",status:v.Fail,id:l,message:`[${b(l)}] Failed`}):r.info.log({type:"task",status:v.Success,id:l,message:`[${b(l)}] Completed ${m.length} steps`}),{response:s[h.Latest],stats:o}}a(ke,"executeAgentCommand");const Ae="ax.config",Ce=["yaml","yml","json"];async function Ee(t,e,n){const{content:s,format:i}=await $(t,{name:Ae,formats:Ce},"Config File");let o=null;if(i==="json")o=JSON.parse(s);else if(i==="yaml"||i==="yml")o=_.parse(s);else throw new Error("Invalid config file format");const r={value:""};if(xe(o,r))return o;throw new Error(r.value)}a(Ee,"getProviderConfig");function xe(t,e){if(typeof t!="object"||t===null)return e&&(e.value="Config: must be a non-null object"),!1;if("openai"in t){const n=t.openai;if(typeof n!="object"||n===null)return e&&(e.value="Config: openai must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: openai.api-key must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: openai.model must be a string"),!1}if("anthropic"in t){const n=t.anthropic;if(typeof n!="object"||n===null)return e&&(e.value="Config: anthropic must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: anthropic.api-key must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: anthropic.model must be a string"),!1}if("ollama"in t){const n=t.ollama;if(typeof n!="object"||n===null)return e&&(e.value="Config: ollama must be an object"),!1;if("url"in n&&typeof n.url!="string")return e&&(e.value="Config: ollama.url must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: ollama.model must be a string"),!1}if("brave"in t){const n=t.brave;if(typeof n!="object"||n===null)return e&&(e.value="Config: brave must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: brave.api-key must be a string"),!1;if("delay"in n&&typeof n.delay!="number")return e&&(e.value="Config: brave.delay must be a number"),!1}return!0}a(xe,"isProviderConfig");function _e(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("api-key"in t)||typeof t["api-key"]!="string")throw new Error("Missing or invalid 'api-key'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}a(_e,"assertIsOpenAIProviderConfig");function Pe(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("api-key"in t)||typeof t["api-key"]!="string")throw new Error("Missing or invalid 'api-key'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}a(Pe,"assertIsAnthropicProviderConfig");function Te(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("url"in t)||typeof t.url!="string")throw new Error("Missing or invalid 'url'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}a(Te,"assertIsOllamaProviderConfig");const $e={CLAUDE_3_5_HAIKU_LATEST:"claude-3-5-haiku-latest"},Oe=$e.CLAUDE_3_5_HAIKU_LATEST;class Se{static{a(this,"AnthropicProvider")}name="Anthropic";client;model;recorder;constructor(e,n,s){const i={"api-key":e["api-key"]||n["api-key"],model:e.model||n.model||Oe};try{Pe(i),this.model=i.model,this.client=new W({apiKey:i["api-key"]}),this.recorder=s}catch(o){throw new Error(`Invalid Anthropic configuration: ${o}`)}}createChatCompletionRequest(e){return new Ie(this.client,this.model,e,this.recorder)}}class Ie{static{a(this,"AnthropicChatRequest")}chat;client;model;recorder;constructor(e,n,s,i){this.client=e,this.model=n,this.chat=s,this.recorder=i}async execute(){const e={model:this.model,...this.chat.toAnthropic(),max_tokens:Ne(this.model)};this.recorder?.debug?.log(e);let n;try{const s=await this.client.messages.create(e);n=Fe(s)}catch(s){n={type:"error",error:{type:s.error.error.type??"Undetermined",message:s.error.error.message??"Unexpected error from Anthropic"},usage:{in:0,out:0},raw:s}}return this.recorder?.debug?.log(n),n}}function Ne(t){switch(t){case"claude-3-5-sonnet-20240620":return 4096;case"claude-3-opus-20240229":return 4096;case"claude-3-sonnet-20240229":return 4096;case"claude-3-haiku-20240307":return 4096;default:return 4096}}a(Ne,"getMaxTokens");function q(t){switch(t){case"max_tokens":return f.Length;case"end_turn":return f.Stop;case"stop_sequence":return f.Stop;case"tool_use":return f.FunctionCall;default:return f.Error}}a(q,"getStopReason$1");function Fe(t){const e=q(t.stop_reason);if(e===f.Error)return{type:"error",error:{type:"Uncaught error",message:"Stop reason is not recognized."},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t};if(e===f.FunctionCall){const n=t.content[0],s=n.type==="text"?n.text:"",i=t.content.slice(1).map(o=>{if(o.type==="tool_use")return{id:o.id,name:o.name,arguments:o.input}}).filter(o=>o!==null);return{type:"success",id:t.id,model:t.model,reason:f.FunctionCall,message:{role:t.role,content:s,toolCalls:i},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}if(t.type=="message"){const n=t.content[0];if(n.type=="text")return{type:"success",id:t.id,model:t.model,reason:q(t.stop_reason),message:{role:t.role,content:n.text},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}}a(Fe,"translate$1");const De="http://localhost:11434";class Ue{static{a(this,"OllamaProvider")}name="Ollama";url;model;recorder;constructor(e,n,s){const i={model:e.model??n.model,url:e.url??n.url??De};try{Te(i),this.url=i.url,this.model=i.model,this.recorder=s}catch(o){throw new Error(`Invalid Ollama configuration: ${o}`)}}createChatCompletionRequest(e){return new Re(this.url,this.model,e,this.recorder)}}class Re{static{a(this,"OllamaChatCompletionRequest")}chat;url;model;recorder;constructor(e,n,s,i){this.url=e,this.model=n,this.chat=s,this.recorder=i}async execute(){const e={model:this.model,messages:this.chat.toOpenAI().messages,stream:!1,options:{temperature:.7}};this.recorder?.debug?.log(e);let n;try{const s=await fetch(`${this.url}/api/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);const i=await s.json();n={type:"success",id:`ollama-${Date.now()}`,model:this.model,reason:f.Stop,message:{role:"assistant",content:i.message?.content||""},usage:{in:i.prompt_eval_count||0,out:i.eval_count||0},raw:i}}catch(s){console.log(s),n={type:"error",error:{type:"OllamaError",message:s.message||"Unexpected error from Ollama"},usage:{in:0,out:0},raw:JSON.stringify(s)}}return this.recorder?.debug?.log(n),n}}const Je={GPT_4_1:"gpt-4.1"},Me=Je.GPT_4_1;class qe{static{a(this,"OpenAIProvider")}name="OpenAI";client;model;recorder;constructor(e,n,s){const i={"api-key":e["api-key"]||n["api-key"],model:e.model||n.model||Me};try{_e(i),this.model=i.model,this.client=new z({apiKey:i["api-key"]}),this.recorder=s}catch(o){throw new Error(`Invalid OpenAI configuration: ${o}`)}}createChatCompletionRequest(e){return new Be(this.client,this.model,e,this.recorder)}}class Be{static{a(this,"OpenAIChatCompletionRequest")}chat;openai;model;recorder;constructor(e,n,s,i){this.openai=e,this.model=n||"gpt-4o",this.chat=s,this.recorder=i}async execute(){const e={model:this.model,...this.chat.toOpenAI()};this.recorder?.debug?.log(e);let n;try{const s=await this.openai.chat.completions.create(e);n=Ge(s)}catch(s){console.error(s),n={type:"error",error:{type:s.type??"Undetermined",message:s.message??"Unexpected error from OpenAI"},usage:{in:0,out:0},raw:s}}return this.recorder?.debug?.log(n),n}}function Le(t){switch(t){case"length":return f.Length;case"stop":return f.Stop;case"tool_calls":return f.FunctionCall;default:return f.Error}}a(Le,"getStopReason");function Ge(t){if(t.choices.length>0){const e=t.choices[0],n=e.message.tool_calls?.map(s=>({id:s.id,name:s.function.name,arguments:JSON.parse(s.function.arguments)}));return{type:"success",id:t.id,model:t.model,reason:Le(e.finish_reason),message:{content:e.message.content??"",role:e.message.role,toolCalls:n},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}return{type:"error",error:{type:"undetermined",message:"Unexpected response from OpenAI"},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}a(Ge,"translate");function Ke(t,e,n,s){if(t.engine=="openai")return new qe(e.openai,t,s);if(t.engine=="anthropic")return new Se(e.anthropic,t,s);if(t.engine=="ollama")return new Ue(e.ollama,t,s);throw new Error("AI Provider is invalid or not supported. Please check your job file.")}a(Ke,"getProvider");class We{static{a(this,"Recorder")}instanceId=crypto.randomUUID();level=g.Info;logs=[];writers=[];subscribe(e){this.writers.includes(e)||this.writers.push(e)}unsubscribe(e){const n=this.writers.indexOf(e);n!==-1&&this.writers.splice(n,1)}publish(e){this.logs.push(e);for(const n of this.writers)n.handleEvent(e)}logFunction(e,n){const s=typeof n=="string"?{message:n}:n;this.publish({level:e,time:Date.now(),...s})}get info(){return{log:this.logFunction.bind(this,g.Info)}}get debug(){return this.level>g.Debug?null:{log:this.logFunction.bind(this,g.Debug)}}getLogs(e=g.Info){return this.logs.filter(n=>n.level>=e)}}const He={name:"brave",description:"Perform a search using the Brave search engine",parameters:{type:"object",properties:{searchTerm:{type:"string",description:"The search term to query"}},required:["searchTerm"]}};function ze(t=null,e){if(t&&t["api-key"]){const n=t["api-key"],s=t.delay;return{name:"braveSearch",schema:He,fn:Xe(n,s,e)}}return e?.debug?.log("Brave search API key not found in config"),null}a(ze,"getBraveSearch");function Xe(t,e=void 0,n){let s=0;return async i=>{const{searchTerm:o}=i;if(n.debug?.log({kind:"heading",message:`Brave: searching for ${o}`}),e){for(;Date.now()-s<e;)await pe(e-(Date.now()-s));s=Date.now()}try{const r=t,l="https://api.search.brave.com/res/v1/web/search",c=new URL(l);c.searchParams.append("q",o),c.searchParams.append("format","json");const u=await fetch(c.toString(),{method:"GET",headers:{Accept:"application/json","X-Subscription-Token":r}});if(!u.ok)throw new Error(`HTTP error! status: ${u}`);return await u.json()}catch(r){throw console.error("Error fetching search results:",r),r}}}a(Xe,"createBraveSearch");function Ye(t,e,n){const s={},i={},o=ze(t.brave,n);return o&&(s.brave=o.fn,i.brave=o.schema),{tools:s,schemas:i,getSchemas:a(l=>{const c=[];for(const u of l)i[u]&&c.push(i[u]);return c},"getSchemas")}}a(Ye,"getTools");export{g as L,We as R,v as T,Ye as a,R as b,Ee as c,ee as d,ke as e,Q as f,Ke as g,S as i,Y as p};
