#!/usr/bin/env node
var se=Object.defineProperty;var o=(t,e)=>se(t,"name",{value:e,configurable:!0});import{Command as ie}from"@commander-js/extra-typings";import v from"chalk";import{randomUUID as U}from"node:crypto";import J from"yaml";import oe from"spinnies";import{access as L,mkdir as M,writeFile as q,appendFile as ae,readFile as b}from"node:fs/promises";import{glob as E}from"glob";import{resolve as B,dirname as re}from"node:path";import ue from"@anthropic-ai/sdk";import le from"openai";function O(t){return Array.isArray(t)?t:[t]}o(O,"arrayify");function k(t){return typeof t=="string"?t:JSON.stringify(t,null,2)}o(k,"stringify");function C(t){return t.slice(0,8)}o(C,"friendly");function ce(t){return new Promise(e=>setTimeout(e,t))}o(ce,"delay");const S="./logs/";class fe{static{o(this,"Writer")}time;constructor(e){this.time=e}get filename(){return`${S}${this.time}.log`}async setup(){try{await L(S)}catch{await M(S)}await q(this.filename,`AXLE: New run at ${this.time}
`)}async write(e){e=`${new Date().toISOString()}> ${e}
`,await ae(this.filename,e)}}class pe{static{o(this,"Logger")}instanceId=new Date().toISOString();spinnies=new oe({color:"white",succeedColor:"white"});opts={debug:!1};writer=null;async initWriter(){this.writer=new fe(new Date().toISOString()),await this.writer.setup()}setOptions(e){this.opts={debug:e.debug??!1}}get progress(){return{add:o((e,n)=>{this.spinnies.add(e,{text:n}),this.writer?.write(n)},"add"),update:o((e,n)=>{this.spinnies.update(e,{text:n}),this.writer?.write(n)},"update"),succeed:o((e,n)=>{this.spinnies.succeed(e,{text:n}),this.writer?.write(n)},"succeed"),fail:o((e,n)=>{this.spinnies.fail(e,{text:n}),this.writer?.write(n)},"fail")}}get info(){return{group(e){const n=k(e);console.log(`
${v.blue("==>")} ${v.whiteBright.bold(n)}`),this.writer?.write(n)},log:o(e=>{const n=k(e);console.log(k(e)),this.writer?.write(n)},"log")}}get debug(){const e=this.opts;return{group(n){const s=k(n);e.debug&&console.log(`
${v.gray("==>")} Debug: ${s}`),this.writer?.write(s)},log:o(n=>{const s=k(n);e.debug&&console.log(v.gray(s)),this.writer?.write(s)},"log")}}}const r=new pe;async function W(t,e,n="File"){let s=null,i="";if(t)try{i=B(t),s=await b(i,{encoding:"utf-8"})}catch{throw new Error(`${n} not found, see --help for details`)}else{for(const a of e.formats)try{i=B(e.name+"."+a),s=await b(i,{encoding:"utf-8"});break}catch{continue}if(s===null)throw new Error(`${n} not found, see --help for details`)}return{content:s,format:i.split(".").pop()??""}}o(W,"loadFile");function me(t,e){t=t.replace("**/*","**");const n=/(?<asterisks>\*{1,2})(?<extension>\.[^\\/]+)?/,s=t.match(n);if(s){let i="";return s.groups?.asterisks.length==1?i+=e.fileNameStem:i+=e.directoryPath+e.fileNameStem,s.groups?.extension?i+=s.groups.extension:i+=e.fileExtension,t.replace(s[0],i)}return t}o(me,"replaceFilePattern");function ge(t){const e=/(?<name>[^\\/]+)(?<extension>\.[^\\/]+)$/,n=t.match(e);return n&&n.length>0&&n.groups?{absolutePath:t,directoryPath:t.replace(n[0],""),fileExtension:n.groups.extension,fileNameStem:n.groups.name,fullFileName:n[0]}:null}o(ge,"pathToComponents");async function de(t,e="."){try{return(await E(`${e}/${t}.*`)).length>0}catch{return!1}}o(de,"fileExists");async function G(t){const e=re(t);try{await L(e)}catch{await M(e),await G(e)}}o(G,"ensureDirectoryExistence");async function ye(t,e){await G(t),await q(t,e)}o(ye,"writeFileWithDirectories");const he="ax.job",ve=["yaml","yml","json"];async function we(t,e){const{content:n,format:s}=await W(t,{name:he,formats:ve},"Job File");let i=null;if(s==="json")i=JSON.parse(n);else if(s==="yaml"||s==="yml")i=J.parse(n);else throw new Error("Invalid job file format");r.debug?.group("The Job Object"),r.debug?.log(i);const a={value:""};if(be(i,a))return i;throw new Error(`The job file is not valid: ${a.value}`)}o(we,"getJobConfig");function be(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(!ke(t.using,e))return e&&(e.value=`Invalid 'using' property: ${e?.value}`),!1;if(!t.jobs||typeof t.jobs!="object")return e&&(e.value="Missing or invalid 'jobs' property"),!1;for(const[n,s]of Object.entries(t.jobs))if(!xe(s,e))return e&&(e.value=`Invalid job '${n}': ${e?.value}`),!1;return!0}o(be,"isJobConfig");function ke(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine==="openai"?Ae(t,e):t.engine==="anthropic"?Ce(t,e):t.engine==="ollama"?$e(t,e):(e&&(e.value="Invalid engine type. Must be 'openai', 'anthropic', or 'ollama'"),!1)}o(ke,"isUsing");function Ae(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="openai"?(e&&(e.value="Engine must be 'openai'"),!1):t["api-key"]!==void 0&&typeof t["api-key"]!="string"?(e&&(e.value="Property 'api-key' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}o(Ae,"isOpenAIUse");function Ce(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="anthropic"?(e&&(e.value="Engine must be 'anthropic'"),!1):t["api-key"]!==void 0&&typeof t["api-key"]!="string"?(e&&(e.value="Property 'api-key' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}o(Ce,"isAnthropicUse");function $e(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="ollama"?(e&&(e.value="Engine must be 'ollama'"),!1):t.url!==void 0&&typeof t.url!="string"?(e&&(e.value="Property 'url' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}o($e,"isOllamaUse");function xe(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.type==="agent"?Pe(t,e):t.type==="batch"?H(t,e):(e&&(e.value="Job type must be 'agent' or 'batch'"),!1)}o(xe,"isJob");function Pe(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="agent")return e&&(e.value="Job type must be 'agent'"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const n of t.tools)if(typeof n!="string")return e&&(e.value="All tools must be strings"),!1}if(t.variables!==void 0){if(typeof t.variables!="object"||Array.isArray(t.variables))return e&&(e.value="Property 'variables' must be an object"),!1;for(const[n,s]of Object.entries(t.variables))if(typeof s!="string")return e&&(e.value=`Variable '${n}' must be a string`),!1}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let n=0;n<t.steps.length;n++)if(!K(t.steps[n],e))return e&&(e.value=`Invalid step at index ${n}: ${e?.value}`),!1;return!0}o(Pe,"isAgentJob");function H(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="batch")return e&&(e.value="Job type must be 'batch'"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const n of t.tools)if(typeof n!="string")return e&&(e.value="All tools must be strings"),!1}if(t.variables!==void 0){if(typeof t.variables!="object"||Array.isArray(t.variables))return e&&(e.value="Property 'variables' must be an object"),!1;for(const[n,s]of Object.entries(t.variables))if(typeof s!="string")return e&&(e.value=`Variable '${n}' must be a string`),!1}if(!Array.isArray(t.batch))return e&&(e.value="Property 'batch' must be an array"),!1;for(let n=0;n<t.batch.length;n++){const s=t.batch[n];if(!s||typeof s!="object")return e&&(e.value=`Batch item at index ${n} must be an object`),!1;if(s.type!=="files")return e&&(e.value=`Batch item at index ${n} must have type 'files'`),!1;if(typeof s.input!="string")return e&&(e.value=`Batch item at index ${n} must have a string 'input' property`),!1;if(s["skip-condition"]!==void 0){if(!Array.isArray(s["skip-condition"]))return e&&(e.value=`Batch item at index ${n} must have an array 'skip-condition' property`),!1;for(let i=0;i<s["skip-condition"].length;i++)if(!Ee(s["skip-condition"][i],e))return e&&(e.value=`Invalid skip condition at index ${i} in batch item ${n}: ${e?.value}`),!1}}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let n=0;n<t.steps.length;n++)if(!K(t.steps[n],e))return e&&(e.value=`Invalid step at index ${n}: ${e?.value}`),!1;return!0}o(H,"isBatchJob");function Ee(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.folder!="string"?(e&&(e.value="Property 'folder' must be a string"),!1):typeof t.contains!="string"?(e&&(e.value="Property 'contains' must be a string"),!1):!0}o(Ee,"isSkipOptions");function K(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):!t.action||typeof t.action!="string"?(e&&(e.value="Step must have a string 'action' property"),!1):t.action==="chat"?N(t,e):t.action==="tool-call"?X(t,e):t.action==="tool-respond"?_(t,e):t.action==="write-to-disk"?z(t,e):t.action==="save-to-variables"?Y(t,e):(e&&(e.value=`Unknown action type: ${t.action}`),!1)}o(K,"isStep");function N(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.action!=="chat")return e&&(e.value="Action must be 'chat'"),!1;if(typeof t.content!="string")return e&&(e.value="Property 'content' must be a string"),!1;if(t.system!==void 0&&typeof t.system!="string")return e&&(e.value="Property 'system' must be a string"),!1;if(t.replace!==void 0){if(!Array.isArray(t.replace))return e&&(e.value="Property 'replace' must be an array"),!1;for(let n=0;n<t.replace.length;n++)if(!Oe(t.replace[n],e))return e&&(e.value=`Invalid replace at index ${n}: ${e?.value}`),!1}return!0}o(N,"isChatAction");function X(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="tool-call"?(e&&(e.value="Action must be 'tool-call'"),!1):Array.isArray(t.toolCalls)?t.throttle!==void 0&&typeof t.throttle!="number"?(e&&(e.value="Property 'throttle' must be a number"),!1):!0:(e&&(e.value="Property 'toolCalls' must be an array"),!1)}o(X,"isToolAction");function _(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="tool-respond"?(e&&(e.value="Action must be 'tool-respond'"),!1):Array.isArray(t.toolCalls)?!0:(e&&(e.value="Property 'toolCalls' must be an array"),!1)}o(_,"isToolRespondAction");function z(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="write-to-disk"?(e&&(e.value="Action must be 'write-to-disk'"),!1):typeof t.output!="string"?(e&&(e.value="Property 'output' must be a string"),!1):!0}o(z,"isWriteToDiskAction");function Y(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="save-to-variables"?(e&&(e.value="Action must be 'save-to-variables'"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}o(Y,"isSaveVarAction");function Oe(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source==="variables"?Q(t,e):t.source==="file"?Se(t,e):t.source==="many-files"?Ne(t,e):t.source===void 0?Q(t,e):(e&&(e.value="Property 'source' must be 'variables', 'file', or 'many-files'"),!1)}o(Oe,"isReplace");function Q(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source!==void 0&&t.source!=="variables"?(e&&(e.value="Property 'source' must be 'variables' or undefined"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}o(Q,"isReplaceVariables");function Se(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source!=="file"?(e&&(e.value="Property 'source' must be 'file'"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}o(Se,"isReplaceFile");function Ne(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(typeof t.pattern!="string")return e&&(e.value="Property 'pattern' must be a string"),!1;if(t.source!=="many-files")return e&&(e.value="Property 'source' must be 'many-files'"),!1;if(typeof t.name!="string"&&!Array.isArray(t.name))return e&&(e.value="Property 'name' must be a string or an array of strings"),!1;if(Array.isArray(t.name)){for(let n=0;n<t.name.length;n++)if(typeof t.name[n]!="string")return e&&(e.value=`Name at index ${n} must be a string`),!1}return!0}o(Ne,"isReplaceManyFiles");var m=(t=>(t[t.Stop=0]="Stop",t[t.Length=1]="Length",t[t.FunctionCall=2]="FunctionCall",t[t.Error=3]="Error",t))(m||{});async function Z(t,e){try{const n=await b(e.name,"utf-8");t=t.replace(e.pattern,n)}catch(n){console.error(n)}return t}o(Z,"fileReplacer");async function j(t,e){try{const n=O(e.name);let s="";for(const i of n){const a=await E(i);r.debug.log(`many-files parser. For glob "${i}", found ${a.length} files.`);const l=await Promise.all(a.map(async c=>{const u=await b(c,"utf-8");return c+`:
`+u}));s+=l.join(`
`)}t=t.replace(e.pattern,s)}catch(n){console.error(n)}return t}o(j,"manyFilesReplacer");function _e(t,e){for(const[n,s]of Object.entries(e))t=t.replace(/\$\{(.*?)\}/g,(i,a)=>e[a]||"");return t}o(_e,"replaceVariables");async function Te(t){const{step:e,chat:n,provider:s,stats:i,variables:a,options:l}=t;if(N(e)){let{content:p,system:g}=e;e.replace&&([p,g]=await Ie(e.replace,a,e.content,e.system)),g&&n.addSystem(g),n.addUser(p)}else if(_(e)){const g=a.input.map(y=>({id:y.id,content:JSON.stringify(y.results)}));n.addTools(g)}if(l.dryRun)return r.debug.log(n),{action:"continue"};const u=await s.createChatCompletionRequest(n).execute();if(i.in+=u.usage.in,i.out+=u.usage.out,u.type==="success")switch(u.reason){case m.Stop:return u.message.content&&(n.addAssistant(u.message.content),a.input=u.message.content),{action:"continue"};case m.Length:return{action:"error",error:new Error("Incomplete model output due to `max_tokens` parameter or token limit")};case m.FunctionCall:{let p=u.message;return u.message.content&&(n.addAssistant(p.content,p.toolCalls),a.input=u.message.content),{action:"toolCall",toolCalls:p.toolCalls}}}if(r.debug.log(u),u.type==="error")return{action:"error",error:new Error(u.error.message)}}o(Te,"executeChatAction");async function Ie(t,e,n,s){for(const i of t)switch(i.source){case"file":n=await Z(n,i),s&&(s=await Z(s,i));break;case"many-files":n=await j(n,i),s&&(s=await j(s,i));break;default:n=n.replace(i.pattern,e[i.name]),s&&(s=s.replace(i.pattern,e[i.name]))}return[n,s]}o(Ie,"handleReplace");async function Fe(t){const{action:e,variables:n,options:s}=t;if(s.dryRun){r.debug.log("Dry run: no action was taken");return}const i=e.output,a=n.input;if(typeof a=="string"){let l="";i.includes("*")?l=me(i,n.file):l=_e(i,n),await ye(l,a)}}o(Fe,"execWriteToDisk");function De(t){const{action:e,variables:n,options:s}=t;if(s.dryRun){r.debug.log("Dry run: no action was taken");return}const i=n.input;typeof i=="string"&&(n[e.name]=i)}o(De,"execSaveToVariables");async function Re(t){const{step:e,toolManager:n,variables:s}=t,i=e.toolCalls,a=[];for(const c of i)a.push(new Promise((u,p)=>{const g=n.tools[c.name];if(!g){p(`Tool not found: ${c.name}`);return}g(c.arguments).then(y=>u({id:c.id,results:y})).catch(p)}));const l=await Promise.all(a);s.input=l,r.debug.log(l)}o(Re,"executeToolAction");class Ue{static{o(this,"Chat")}system;messages=[];tools=[];setToolSchemas(e){this.tools=e}addSystem(e){this.system=e}addUser(e){this.messages.push({role:"user",content:e})}addAssistant(e,n){this.messages.push({role:"assistant",content:e,toolCalls:n})}addTools(e){this.messages.push({role:"tool",content:e})}toOpenAI(){const e=[];this.system&&e.push({role:"system",content:this.system});const n=this.tools.length>0?this.tools.map(i=>({type:"function",function:i})):void 0,s=this.messages.map(i=>{switch(i.role){case"tool":return i.content.map(a=>({role:"tool",tool_call_id:a.id,content:a.content}));case"assistant":return{role:i.role,content:i.content,tool_calls:i.toolCalls.map(a=>({id:a.id,type:"function",function:{name:a.name,arguments:JSON.stringify(a.arguments)}}))};default:return{role:i.role,content:i.content}}}).flat(1/0);return{messages:[...e,...s],...n&&{tools:n}}}toAnthropic(){const e=this.messages.map(s=>{switch(s.role){case"assistant":const i=[];return i.push({type:"text",text:s.content}),s.toolCalls&&i.push(...s.toolCalls.map(a=>({type:"tool_use",id:a.id,name:a.name,input:a.arguments}))),{role:"assistant",content:i};case"tool":return{role:"user",content:s.content.map(a=>({type:"tool_result",tool_use_id:a.id,content:a.content}))};default:return{role:"user",content:s.content}}}),n=this.tools.map(s=>({name:s.name,description:s.description,input_schema:s.parameters}));return{system:this.system,messages:e,tools:n}}toString(){return JSON.stringify({system:this.system,messages:this.messages,tools:this.tools})}}class Je{static{o(this,"DynamicArrayIterator")}array;index=0;constructor(e){this.array=[...e]}*[Symbol.iterator](){for(;this.index<this.array.length;)yield[this.index,this.array[this.index]],this.index++}addItem(e){this.array.splice(this.index+1,0,e)}get length(){return this.array.length}}async function V(t,e,n,s,i,a){const l=U(),{steps:c}=t;r.progress.add(l,`[${C(l)}] Starting job`);const u=new Ue;if(t.tools){const y=n.getSchemas(t.tools);u.setToolSchemas(y)}if(t.variables)for(const[y,f]of Object.entries(t.variables))s[y]=f;let p=!1;const g=new Je(c);for(const[y,f]of g)if(r.progress.update(l,`[${C(l)}] Processing step ${y+1}: ${f.action}`),N(f)||_(f)){const{action:h,error:A,toolCalls:w}=await Te({step:f,chat:u,provider:e,stats:a,variables:s,options:i});A&&(p=!0,console.error(A)),h=="toolCall"&&w&&(g.addItem({action:"tool-respond",toolCalls:w}),g.addItem({action:"tool-call",toolCalls:w}))}else if(X(f))try{await Re({step:f,toolManager:n,variables:s,options:i})}catch(h){p=!0,console.error(h)}else Y(f)?De({action:f,variables:s,options:i}):z(f)&&await Fe({action:f,variables:s,options:i});p?r.progress.fail(l,`[${C(l)}] Failed`):r.progress.succeed(l,`[${C(l)}] completed ${g.length} steps`)}o(V,"executeAgentCommand");async function Le(t,e,n,s,i,a){const l=U(),c=[];if(!t.batch)throw new Error("Batch job is missing batch field");const u=O(t.batch);for(const f of u)if(f.type==="files"){const h=f.input,A=await E(h,{withFileTypes:!0});for(const w of A){const D=w.fullpath(),R=ge(D);if(!await Me(f["skip-condition"],R)){const ne={variables:{content:await b(D,"utf-8"),file:R},job:t};c.push(ne)}}}if(c.length===0){r.info.log("No runs to execute");return}let p=0;r.progress.add(l,`Working on 0/${c.length}`);const g=o(async f=>{try{await V(f.job,e,n,{...f.variables,...s},i,a)}catch(h){console.error(h)}finally{p++,r.progress.add(l,`Working on ${p}/${c.length}`)}},"executeRun"),y=5;for(let f=0;f<c.length;f+=y){const h=c.slice(f,f+y);await Promise.all(h.map(g))}r.progress.succeed(l,`All jobs (${c.length}) completed`)}o(Le,"executeBatchCommand");async function Me(t,e){if(t){let n=O(t);for(const s of n)if(s.folder&&s.contains&&s.contains==="fileNameStem"&&e)return await de(e.fileNameStem,s.folder)}return!1}o(Me,"processSkipRules");const qe="ax.config",Be=["yaml","yml","json"];async function We(t,e){const{content:n,format:s}=await W(t,{name:qe,formats:Be},"Config File");let i=null;if(s==="json")i=JSON.parse(n);else if(s==="yaml"||s==="yml")i=J.parse(n);else throw new Error("Invalid config file format");r.debug.group("The Config Object"),r.debug.log(i);const a={value:""};if(Ge(i,a))return i;throw new Error(a.value)}o(We,"getProviderConfig");function Ge(t,e){if(typeof t!="object"||t===null)return e&&(e.value="Config: must be a non-null object"),!1;if("openai"in t){const n=t.openai;if(typeof n!="object"||n===null)return e&&(e.value="Config: openai must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: openai.api-key must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: openai.model must be a string"),!1}if("anthropic"in t){const n=t.anthropic;if(typeof n!="object"||n===null)return e&&(e.value="Config: anthropic must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: anthropic.api-key must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: anthropic.model must be a string"),!1}if("ollama"in t){const n=t.ollama;if(typeof n!="object"||n===null)return e&&(e.value="Config: ollama must be an object"),!1;if("url"in n&&typeof n.url!="string")return e&&(e.value="Config: ollama.url must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: ollama.model must be a string"),!1}if("brave"in t){const n=t.brave;if(typeof n!="object"||n===null)return e&&(e.value="Config: brave must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: brave.api-key must be a string"),!1;if("delay"in n&&typeof n.delay!="number")return e&&(e.value="Config: brave.delay must be a number"),!1}return!0}o(Ge,"isProviderConfig");function He(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("api-key"in t)||typeof t["api-key"]!="string")throw new Error("Missing or invalid 'api-key'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}o(He,"assertIsOpenAIProviderConfig");function Ke(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("api-key"in t)||typeof t["api-key"]!="string")throw new Error("Missing or invalid 'api-key'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}o(Ke,"assertIsAnthropicProviderConfig");function Xe(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("url"in t)||typeof t.url!="string")throw new Error("Missing or invalid 'url'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}o(Xe,"assertIsOllamaProviderConfig");const ze="claude-3-5-haiku-latest";class Ye{static{o(this,"AnthropicProvider")}name="Anthropic";client;model;constructor(e,n){const s={"api-key":e["api-key"]||n["api-key"],model:e.model||n.model||ze};try{Ke(s),this.model=s.model,this.client=new ue({apiKey:s["api-key"]})}catch(i){throw new Error(`Invalid Anthropic configuration: ${i}`)}}createChatCompletionRequest(e){return new Qe(this.client,this.model,e)}}class Qe{static{o(this,"AnthropicChatRequest")}chat;client;model;constructor(e,n,s){this.client=e,this.model=n,this.chat=s}async execute(){const e={model:this.model,...this.chat.toAnthropic(),max_tokens:Ze(this.model)};r.debug.log(e);let n;try{const s=await this.client.messages.create(e);n=je(s)}catch(s){n={type:"error",error:{type:s.error.error.type??"Undetermined",message:s.error.error.message??"Unexpected error from Anthropic"},usage:{in:0,out:0},raw:s}}return r.debug.log(n),n}}function Ze(t){switch(t){case"claude-3-5-sonnet-20240620":return 4096;case"claude-3-opus-20240229":return 4096;case"claude-3-sonnet-20240229":return 4096;case"claude-3-haiku-20240307":return 4096;default:return 4096}}o(Ze,"getMaxTokens");function ee(t){switch(t){case"max_tokens":return m.Length;case"end_turn":return m.Stop;case"stop_sequence":return m.Stop;case"tool_use":return m.FunctionCall;default:return m.Error}}o(ee,"getStopReason$1");function je(t){const e=ee(t.stop_reason);if(e===m.Error)return{type:"error",error:{type:"Uncaught error",message:"Stop reason is not recognized."},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t};if(e===m.FunctionCall){const n=t.content[0],s=n.type==="text"?n.text:"",i=t.content.slice(1).map(a=>{if(a.type==="tool_use")return{id:a.id,name:a.name,arguments:a.input}}).filter(a=>a!==null);return{type:"success",id:t.id,model:t.model,reason:m.FunctionCall,message:{role:t.role,content:s,toolCalls:i},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}if(t.type=="message"){const n=t.content[0];if(n.type=="text")return{type:"success",id:t.id,model:t.model,reason:ee(t.stop_reason),message:{role:t.role,content:n.text},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}}o(je,"translate$1");const Ve="http://localhost:11434";class et{static{o(this,"OllamaProvider")}name="Ollama";url;model;constructor(e,n){const s={model:e.model??n.model,url:e.url??n.url??Ve};try{Xe(s),this.url=s.url,this.model=s.model}catch(i){throw new Error(`Invalid Ollama configuration: ${i}`)}}createChatCompletionRequest(e){return new tt(this.url,this.model,e)}}class tt{static{o(this,"OllamaChatCompletionRequest")}chat;url;model;constructor(e,n,s){this.url=e,this.model=n,this.chat=s}async execute(){const e={model:this.model,messages:this.chat.toOpenAI().messages,stream:!1,options:{temperature:.7}};r.debug.log(e);let n;try{const s=await fetch(`${this.url}/api/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);const i=await s.json();n={type:"success",id:`ollama-${Date.now()}`,model:this.model,reason:m.Stop,message:{role:"assistant",content:i.message?.content||""},usage:{in:i.prompt_eval_count||0,out:i.eval_count||0},raw:i}}catch(s){console.log(s),n={type:"error",error:{type:"OllamaError",message:s.message||"Unexpected error from Ollama"},usage:{in:0,out:0},raw:JSON.stringify(s)}}return r.debug.log(n),n}}const nt="gpt-4o";class st{static{o(this,"OpenAIProvider")}name="OpenAI";client;model;constructor(e,n){const s={"api-key":e["api-key"]||n["api-key"],model:e.model||n.model||nt};try{He(s),this.model=s.model,this.client=new le({apiKey:s["api-key"]})}catch(i){throw new Error(`Invalid OpenAI configuration: ${i}`)}}createChatCompletionRequest(e){return new it(this.client,this.model,e)}}class it{static{o(this,"OpenAIChatCompletionRequest")}chat;openai;model;constructor(e,n,s){this.openai=e,this.model=n||"gpt-4o",this.chat=s}async execute(){const e={model:this.model,...this.chat.toOpenAI()};r.debug.log(e);let n;try{const s=await this.openai.chat.completions.create(e);n=at(s)}catch(s){console.error(s),n={type:"error",error:{type:s.type??"Undetermined",message:s.message??"Unexpected error from OpenAI"},usage:{in:0,out:0},raw:s}}return r.debug.log(n),n}}function ot(t){switch(t){case"length":return m.Length;case"stop":return m.Stop;case"tool_calls":return m.FunctionCall;default:return m.Error}}o(ot,"getStopReason");function at(t){if(t.choices.length>0){const e=t.choices[0],n=e.message.tool_calls?.map(s=>({id:s.id,name:s.function.name,arguments:JSON.parse(s.function.arguments)}));return{type:"success",id:t.id,model:t.model,reason:ot(e.finish_reason),message:{content:e.message.content??"",role:e.message.role,toolCalls:n},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}return{type:"error",error:{type:"undetermined",message:"Unexpected response from OpenAI"},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}o(at,"translate");function rt(t,e,n){if(t.engine=="openai")return new st(e.openai,t);if(t.engine=="anthropic")return new Ye(e.anthropic,t);if(t.engine=="ollama")return new et(e.ollama,t);throw new Error("AI Provider is invalid or not supported. Please check your job file.")}o(rt,"getProvider");const ut={name:"brave",description:"Perform a search using the Brave search engine",parameters:{type:"object",properties:{searchTerm:{type:"string",description:"The search term to query"}},required:["searchTerm"]}};function lt(t){if(t["api-key"]){const e=t["api-key"],n=t.delay;return{name:"braveSearch",schema:ut,fn:ct(e,n)}}return r.debug.log("Brave search API key not found in config"),null}o(lt,"getBraveSearch");function ct(t,e=void 0){let n=0;return async s=>{const{searchTerm:i}=s;if(r.debug.group(`Brave: searching for ${i}`),e){for(;Date.now()-n<e;)await ce(e-(Date.now()-n));n=Date.now()}try{const a=t,l="https://api.search.brave.com/res/v1/web/search",c=new URL(l);c.searchParams.append("q",i),c.searchParams.append("format","json");const u=await fetch(c.toString(),{method:"GET",headers:{Accept:"application/json","X-Subscription-Token":a}});if(!u.ok)throw new Error(`HTTP error! status: ${u}`);return await u.json()}catch(a){throw console.error("Error fetching search results:",a),a}}}o(ct,"createBraveSearch");function ft(t,e){const n={},s={},i=lt(t.brave);return i&&(n.brave=i.fn,s.brave=i.schema),{tools:n,schemas:s,getSchemas:o(l=>{const c=[];for(const u of l)s[u]&&c.push(s[u]);return c},"getSchemas")}}o(ft,"getTools");const $=new ie().name("axle").description("A CLI tool for running AI jobs").version("1.0.0").option("--dry-run","Run the application without executing against the AI providers").option("-c, --config <path>","Path to the config file").option("-j, --job <path>","Path to the job file").option("--no-log","Do not write the output to a log file").option("-d, --debug","Print additional debug information").option("--args <args...>","Additional arguments in the form key=value");$.parse(process.argv);const d=$.opts(),x={};d.args&&d.args.forEach(t=>{const[e,n]=t.split("=");e&&n&&(x[e.trim()]=n.trim())}),r.setOptions(d),d.log&&await r.initWriter(),d.debug&&(r.debug?.group("Options"),r.debug?.log(d),r.debug?.log("Additional Arguments:"),r.debug?.log(x));let T,I;try{T=await We(d.config??null,d),I=await we(d.job??null,d)}catch(t){console.error(`${v.red(t.message)}`),r.debug?.log(t.stack),console.log(""),$.outputHelp(),process.exit(1)}const te=ft(T);let F;try{F=rt(I.using,T,d)}catch(t){console.error(`${v.red(t.message)}`),r.debug?.log(t.stack),console.log(""),$.outputHelp(),process.exit(1)}r.info.group("All systems operational. Running job...");const pt=Date.now();d.dryRun&&r.info.log("Dry run mode enabled. No API calls will be made.");const P={in:0,out:0};for(const[t,e]of Object.entries(I.jobs))r.info.group(`Executing "${t}"`),H(e)?await Le(e,F,te,x,d,P):await V(e,F,te,x,d,P);r.info.group("Usage"),r.info.log(`Total run time: ${Date.now()-pt}ms`),r.info.log(`Input tokens: ${P.in} `),r.info.log(`Output tokens: ${P.out} `),r.info.group("Complete. Goodbye");
