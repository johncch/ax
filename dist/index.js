#!/usr/bin/env node
var z=Object.defineProperty;var i=(e,t)=>z(e,"name",{value:t,configurable:!0});import{Command as Q}from"@commander-js/extra-typings";import{randomUUID as R}from"node:crypto";import w from"chalk";import Z from"spinnies";import{access as $,mkdir as E,writeFile as _,appendFile as ee,readFile as h}from"node:fs/promises";import{glob as x}from"glob";import{resolve as D,dirname as te}from"node:path";import T from"yaml";import ne from"@anthropic-ai/sdk";import re from"openai";var f=(e=>(e[e.Stop=0]="Stop",e[e.Length=1]="Length",e[e.FunctionCall=2]="FunctionCall",e[e.Error=3]="Error",e))(f||{});class oe{static{i(this,"Chat")}system;messages=[];addSystem(t){this.system=t}addUser(t){this.messages.push({role:"user",content:t})}addAssistant(t){this.messages.push({role:"assistant",content:t})}toOpenAI(){return[{role:"system",content:this.system},...this.messages]}toAnthropic(){return{system:this.system,messages:this.messages}}toString(){return JSON.stringify({system:this.system,messages:this.messages})}}function C(e){return Array.isArray(e)?e:[e]}i(C,"arrayify");function m(e){return typeof e=="string"?e:JSON.stringify(e,null,2)}i(m,"stringify");function A(e){return e.slice(0,8)}i(A,"friendly");const S="./logs/";class ie{static{i(this,"Writer")}time;constructor(t){this.time=t}get filename(){return`${S}${this.time}.log`}async setup(){try{await $(S)}catch{await E(S)}await _(this.filename,`AXLE: New run at ${this.time}
`)}async write(t){t=`${new Date().toISOString()}> ${t}
`,await ee(this.filename,t)}}class se{static{i(this,"Logger")}instanceId=new Date().toISOString();spinnies=new Z({color:"white",succeedColor:"white"});opts={debug:!1};writer=null;async initWriter(){this.writer=new ie(new Date().toISOString()),await this.writer.setup()}setOptions(t){this.opts={debug:t.debug??!1}}get progress(){return{add:i((t,n)=>{this.spinnies.add(t,{text:n}),this.writer?.write(n)},"add"),update:i((t,n)=>{this.spinnies.update(t,{text:n}),this.writer?.write(n)},"update"),succeed:i((t,n)=>{this.spinnies.succeed(t,{text:n}),this.writer?.write(n)},"succeed"),fail:i((t,n)=>{this.spinnies.fail(t,{text:n}),this.writer?.write(n)},"fail")}}get info(){return{group(t){const n=m(t);console.log(`
${w.blue("==>")} ${w.whiteBright.bold(n)}`),this.writer?.write(n)},log:i(t=>{const n=m(t);console.log(m(t)),this.writer?.write(n)},"log")}}get debug(){const t=this.opts;return{group(n){const o=m(n);t.debug&&console.log(`
${w.gray("==>")} Debug: ${o}`),this.writer?.write(o)},log:i(n=>{const o=m(n);t.debug&&console.log(w.gray(o)),this.writer?.write(o)},"log")}}}const r=new se;async function U(e,t){try{const n=await h(t.name,"utf-8");e=e.replace(t.pattern,n)}catch(n){console.error(n)}return e}i(U,"fileReplacer");async function B(e,t){try{const n=C(t.name);let o="";for(const s of n){const a=await x(s);r.debug.log(`many-files parser. For glob "${s}", found ${a.length} files.`);const l=await Promise.all(a.map(async d=>{const g=await h(d,"utf-8");return d+`:
`+g}));o+=l.join(`
`)}e=e.replace(t.pattern,o)}catch(n){console.error(n)}return e}i(B,"manyFilesReplacer");async function ae(e){const{step:t,chat:n,provider:o,stats:s,variables:a,options:l}=e;let{content:d,system:g}=t;if(t.replace&&([d,g]=await ce(t.replace,a,t.content,t.system)),g&&n.addSystem(g),n.addUser(d),l.dryRun)return r.debug.log(n),{action:"continue"};const c=await o.createChatCompletionRequest(n).execute();if(s.in+=c.usage.in,s.out+=c.usage.out,c.type=="success")switch(c.reason){case f.Stop:return c.message.content&&(n.addAssistant(c.message.content),a.input=c.message.content),{action:"continue"};case f.Length:return{action:"error",error:new Error("AXIS: Incomplete model output due to `max_tokens` parameter or token limit")};case f.FunctionCall:return{action:"error",error:new Error("Function call is currently not supported")}}return{action:"error",error:new Error("Failed to get response from AI provider")}}i(ae,"executeChatAction");async function ce(e,t,n,o){for(const s of e)switch(s.source){case"file":n=await U(n,s),o&&(o=await U(o,s));break;case"many-files":n=await B(n,s),o&&(o=await B(o,s));break;default:n=n.replace(s.pattern,t[s.name]),o&&(o=o.replace(s.pattern,t[s.name]))}return[n,o]}i(ce,"handleReplace");async function L(e,t,n="File"){let o=null,s="";if(e)try{s=D(e),o=await h(s,{encoding:"utf-8"})}catch{throw new Error(`${n} not found, see --help for details`)}else{for(const a of t.formats)try{s=D(t.name+"."+a),o=await h(s,{encoding:"utf-8"});break}catch{continue}if(o===null)throw new Error(`${n} not found, see --help for details`)}return{content:o,format:s.split(".").pop()??""}}i(L,"loadFile");function le(e,t){e=e.replace("**/*","**");const n=/(?<asterisks>\*{1,2})(?<extension>\.[^\\/]+)?/,o=e.match(n);if(o){let s="";return o.groups?.asterisks.length==1?s+=t.fileNameStem:s+=t.directoryPath+t.fileNameStem,o.groups?.extension?s+=o.groups.extension:s+=t.fileExtension,e.replace(o[0],s)}return e}i(le,"replaceFilePattern");function ue(e){const t=/(?<name>[^\\/]+)(?<extension>\.[^\\/]+)$/,n=e.match(t);return n&&n.length>0&&n.groups?{absolutePath:e,directoryPath:e.replace(n[0],""),fileExtension:n.groups.extension,fileNameStem:n.groups.name,fullFileName:n[0]}:null}i(ue,"pathToComponents");async function fe(e,t="."){try{return(await x(`${t}/${e}.*`)).length>0}catch{return!1}}i(fe,"fileExists");async function M(e){const t=te(e);try{await $(t)}catch{await E(t),await M(t)}}i(M,"ensureDirectoryExistence");async function pe(e,t){await M(e),await _(e,t)}i(pe,"writeFileWithDirectories");async function ge(e){const{action:t,variables:n,options:o}=e;if(o.dryRun){r.debug.log("Dry run: no action was taken");return}const s=t.output,a=n.input;if(typeof a=="string"){const l=le(s,n.file);await pe(l,a)}}i(ge,"execWriteToDisk");function de(e){const{action:t,variables:n,options:o}=e;if(o.dryRun){r.debug.log("Dry run: no action was taken");return}const s=n.input;typeof s=="string"&&(n[t.name]=s)}i(de,"execSaveToVariables");const ye="ax.job",he=["yaml","yml","json"];async function me(e,t){const{content:n,format:o}=await L(e,{name:ye,formats:he},"Job File");let s=null;if(o==="json")s=JSON.parse(n);else if(o==="yaml"||o==="yml")s=T.parse(n);else throw new Error("Invalid job file format");if(r.debug?.group("The Job Object"),r.debug?.log(s),be(s))return s;throw new Error("The job file is not valid")}i(me,"getJob");function be(e){if(typeof e!="object")return r.debug.log("JobConfig: Not an object"),!1;if(!we(e.using))return r.debug.log("JobConfig: Invalid 'using' property"),!1;if(typeof e.jobs!="object")return r.debug.log("JobConfig: 'jobs' property is not an object"),!1;for(const t in e.jobs)if(!Ae(e.jobs[t]))return r.debug.log(`JobConfig: Invalid job at key '${t}'`),!1;return!0}i(be,"isJobConfig");function we(e){return typeof e!="object"?(r.debug.log("Using: Not an object"),!1):typeof e.engine!="string"||e.engine!=="openai"&&e.engine!=="anthropic"?(r.debug.log("Using: Invalid 'engine' property"),!1):e.model!==void 0&&typeof e.model!="string"?(r.debug.log("Using: Invalid 'model' property"),!1):!0}i(we,"isUsing");function Ae(e){return typeof e!="object"?(r.debug.log("Job: Not an object"),!1):ke(e)||W(e)?!0:(r.debug.log("Job: Neither AgentJob nor BatchJob"),!1)}i(Ae,"isJob");function ke(e){if(typeof e!="object")return r.debug.log("AgentJob: Not an object"),!1;if(e.type!=="agent")return r.debug.log("AgentJob: Invalid 'type' property"),!1;if(!Array.isArray(e.steps))return r.debug.log("AgentJob: 'steps' is not an array"),!1;for(const t of e.steps)if(!q(t))return r.debug.log("AgentJob: Invalid step in 'steps' array"),!1;return!0}i(ke,"isAgentJob");function ve(e){return typeof e!="object"?(r.debug.log("SkipOptions: Not an object"),!1):typeof e.folder!="string"?(r.debug.log("SkipOptions: Invalid 'folder' property"),!1):typeof e.contains!="string"?(r.debug.log("SkipOptions: Invalid 'contains' property"),!1):!0}i(ve,"isSkipOptions");function W(e){if(typeof e!="object")return r.debug.log("BatchJob: Not an object"),!1;if(e.type!=="batch")return r.debug.log("BatchJob: Invalid 'type' property"),!1;if(!Array.isArray(e.batch))return r.debug.log("BatchJob: 'batch' is not an array"),!1;for(const t of e.batch){if(typeof t!="object")return r.debug.log("BatchJob: Invalid batch item"),!1;if(t.type!=="files")return r.debug.log("BatchJob: Invalid batch item type"),!1;if(typeof t.input!="string")return r.debug.log("BatchJob: Invalid 'input' property in batch item"),!1;if(t["skip-condition"]!==void 0){if(!Array.isArray(t["skip-condition"]))return r.debug.log("BatchJob: 'skip-condition' is not an array"),!1;for(const n of t["skip-condition"])if(!ve(n))return r.debug.log("BatchJob: Invalid skip option in 'skip-condition'"),!1}}if(!Array.isArray(e.steps))return r.debug.log("BatchJob: 'steps' is not an array"),!1;for(const t of e.steps)if(!q(t))return r.debug.log("BatchJob: Invalid step in 'steps' array"),!1;return!0}i(W,"isBatchJob");function q(e){return typeof e!="object"?(r.debug.log("Step: Not an object"),!1):V(e)||j(e)||P(e)?!0:(r.debug.log("Step: Not a valid Step type"),!1)}i(q,"isStep");function V(e){if(typeof e!="object")return r.debug.log("ChatAction: Not an object"),!1;if(e.action!=="chat")return r.debug.log("ChatAction: Invalid 'action' property"),!1;if(e.system!==void 0&&typeof e.system!="string")return r.debug.log("ChatAction: Invalid 'system' property"),!1;if(typeof e.content!="string")return r.debug.log("ChatAction: Invalid 'content' property"),!1;if(e.replace!==void 0){if(!Array.isArray(e.replace))return r.debug.log("ChatAction: 'replace' is not an array"),!1;for(const t of e.replace)if(!Ie(t))return r.debug.log("ChatAction: Invalid replace in 'replace' array"),!1}return!0}i(V,"isChatAction");function j(e){return typeof e!="object"?(r.debug.log("WriteToDiskAction: Not an object"),!1):e.action!=="write-to-disk"?(r.debug.log("WriteToDiskAction: Invalid 'action' property"),!1):typeof e.output!="string"?(r.debug.log("WriteToDiskAction: Invalid 'output' property"),!1):!0}i(j,"isWriteToDiskAction");function P(e){return typeof e!="object"?(r.debug.log("SaveVarAction: Not an object"),!1):e.action!=="save-to-variables"?(r.debug.log("SaveVarAction: Invalid 'action' property"),!1):typeof e.name!="string"?(r.debug.log("SaveVarAction: Invalid 'name' property"),!1):!0}i(P,"isSaveVarAction");function Ie(e){return typeof e!="object"?(r.debug.log("Replace: Not an object"),!1):Se(e)||Ce(e)||xe(e)?!0:(r.debug.log("Replace: Not a valid Replace type"),!1)}i(Ie,"isReplace");function xe(e){return typeof e!="object"?(r.debug.log("ReplaceVariables: Not an object"),!1):typeof e.pattern!="string"?(r.debug.log("ReplaceVariables: Invalid 'pattern' property"),!1):e.source!==void 0&&e.source!=="variables"?(r.debug.log("ReplaceVariables: Invalid 'source' property"),!1):typeof e.name!="string"?(r.debug.log("ReplaceVariables: Invalid 'name' property"),!1):!0}i(xe,"isReplaceVariables");function Ce(e){return typeof e!="object"?(r.debug.log("ReplaceFile: Not an object"),!1):typeof e.pattern!="string"?(r.debug.log("ReplaceFile: Invalid 'pattern' property"),!1):e.source!=="file"?(r.debug.log("ReplaceFile: Invalid 'source' property"),!1):typeof e.name!="string"?(r.debug.log("ReplaceFile: Invalid 'name' property"),!1):!0}i(Ce,"isReplaceFile");function Se(e){return typeof e!="object"?(r.debug.log("ReplaceManyFiles: Not an object"),!1):typeof e.pattern!="string"?(r.debug.log("ReplaceManyFiles: Invalid 'pattern' property"),!1):e.source!=="many-files"?(r.debug.log("ReplaceManyFiles: Invalid 'source' property"),!1):typeof e.name!="string"&&!Array.isArray(e.name)?(r.debug.log("ReplaceManyFiles: Invalid 'name' property"),!1):!0}i(Se,"isReplaceManyFiles");async function G(e,t,n,o,s){const a=R(),{steps:l}=e;r.progress.add(a,`[${A(a)}] Starting job`);const d=new oe;let g=!1;for(const[b,c]of l.entries())if(r.progress.update(a,`[${A(a)}] Processing step ${b+1}: ${c.action}`),V(c)){const{action:p,error:y}=await ae({step:c,chat:d,provider:t,stats:s,variables:n,options:o});y&&(g=!0,console.error(y))}else P(c)?de({action:c,variables:n,options:o}):j(c)&&await ge({action:c,variables:n,options:o});g?r.progress.fail(a,`[${A(a)}] Failed`):r.progress.succeed(a,`[${A(a)}] complete`)}i(G,"executeAgentCommand");async function Fe(e,t,n,o,s){const a=R(),l=[];if(!e.batch)throw new Error("Batch job is missing batch field");const d=C(e.batch);for(const p of d)if(p.type==="files"){const y=p.input,K=await x(y,{withFileTypes:!0});for(const X of K){const J=X.fullpath(),O=ue(J);if(!await Ne(p["skip-condition"],O)){const Y={variables:{content:await h(J,"utf-8"),file:O},job:e};l.push(Y)}}}if(l.length===0){r.info.log("No runs to execute");return}let g=0;r.progress.add(a,`Working on 0/${l.length}`);const b=i(async p=>{try{await G(p.job,t,{...p.variables,...n},o,s)}catch(y){console.error(y)}finally{g++,r.progress.add(a,`Working on ${g}/${l.length}`)}},"executeRun"),c=5;for(let p=0;p<l.length;p+=c){const y=l.slice(p,p+c);await Promise.all(y.map(b))}r.progress.succeed(a,`All jobs (${l.length}) completed`)}i(Fe,"executeBatchCommand");async function Ne(e,t){if(e){let n=C(e);for(const o of n)if(o.folder&&o.contains&&o.contains==="fileNameStem"&&t)return await fe(t.fileNameStem,o.folder)}return!1}i(Ne,"processSkipRules");class Je{static{i(this,"AnthropicProvider")}name="Anthropic";client;model;constructor(t,n){this.model=t??"claude-3-5-sonnet-20240620",this.client=new ne({apiKey:n.providers.anthropic["api-key"]})}createChatCompletionRequest(t){return new Oe(this.client,this.model,t)}}class Oe{static{i(this,"AnthropicChatRequest")}chat;client;model;constructor(t,n,o){this.client=t,this.model=n,this.chat=o}async execute(){const t={model:this.model,...this.chat.toAnthropic(),max_tokens:Re(this.model)};r.debug.log(t);let n;try{const o=await this.client.messages.create(t);n=Ee(o)}catch(o){n={type:"error",error:{type:o.type??"Undetermined",message:o.message??"Unexpected error from Anthropic"},usage:{in:0,out:0},raw:o}}return r.debug.log(n),n}}function Re(e){switch(e){case"claude-3-5-sonnet-20240620":return 4096;case"claude-3-opus-20240229":return 4096;case"claude-3-sonnet-20240229":return 4096;case"claude-3-haiku-20240307":return 4096;default:return 4096}}i(Re,"getMaxTokens");function $e(e){switch(e){case"max_tokens":return f.Length;case"end_turn":return f.Stop;case"stop_sequence":return f.Stop;case"tool_use":return f.FunctionCall;default:return f.Error}}i($e,"getStopReason$1");function Ee(e){if(e.type=="message"){const t=e.content[0];if(t.type=="text"&&e.stop_reason)return{type:"success",id:e.id,model:e.model,reason:$e(e.stop_reason),message:{role:e.role,content:t.text},usage:{in:e.usage.input_tokens,out:e.usage.output_tokens},raw:e}}return{type:"error",error:{type:"undetermined",message:"Unexpected response from Anthropic"},usage:{in:e.usage.input_tokens,out:e.usage.output_tokens},raw:e}}i(Ee,"translate$1");class _e{static{i(this,"OpenAIProvider")}name="OpenAI";client;model;constructor(t,n,o){this.model=t,this.client=new re({apiKey:n.providers.openai["api-key"]})}createChatCompletionRequest(t){return new De(this.client,this.model,t)}}class De{static{i(this,"OpenAIRequest")}chat;openai;model;constructor(t,n,o){this.openai=t,this.model=n||"gpt-4o",this.chat=o}async execute(){const t={model:this.model,messages:this.chat.toOpenAI()};r.debug.log(t);let n;try{const o=await this.openai.chat.completions.create(t);n=Ue(o)}catch(o){n={type:"error",error:{type:o.type??"Undetermined",message:o.message??"Unexpected error from OpenAI"},usage:{in:0,out:0},raw:o}}return r.debug.log(n),n}}function Te(e){switch(e){case"length":return f.Length;case"stop":return f.Stop;case"function_call":return f.FunctionCall;default:return f.Error}}i(Te,"getStopReason");function Ue(e){if(e.choices.length>0){const t=e.choices[0];return{type:"success",id:e.id,model:e.model,reason:Te(t.finish_reason),message:{content:t.message.content??"",role:t.message.role},usage:{in:e.usage?.prompt_tokens??0,out:e.usage?.completion_tokens??0},raw:e}}return{type:"error",error:{type:"undetermined",message:"Unexpected response from OpenAI"},usage:{in:e.usage?.prompt_tokens??0,out:e.usage?.completion_tokens??0},raw:e}}i(Ue,"translate");function Be(e,t,n){return e.engine=="openai"?new _e(e.model,t,n):e.engine=="anthropic"?new Je(e.model,t):null}i(Be,"getEngine");const Le="ax.config",Me=["yaml","yml","json"];async function We(e,t){const{content:n,format:o}=await L(e,{name:Le,formats:Me},"Config File");let s=null;if(o==="json")s=JSON.parse(n);else if(o==="yaml"||o==="yml")s=T.parse(n);else throw new Error("Invalid config file format");if(r.debug.group("The Config Object"),r.debug.log(s),qe(s))return s;throw new Error("The config file is not valid")}i(We,"getConfig");function qe(e){return e&&typeof e=="object"&&"providers"in e&&typeof e.providers=="object"&&Object.keys(e.providers).length>0&&Object.entries(e.providers).every(([t,n])=>typeof t=="string"&&n&&typeof n=="object"&&"api-key"in n&&typeof n["api-key"]=="string"&&(!("model"in n)||typeof n.model=="string"))}i(qe,"isConfig");const k=new Q().name("axle").description("A CLI tool for running AI jobs").version("1.0.0").option("--dry-run","Run the application without executing against the AI providers").option("-c, --config <path>","Path to the config file").option("-j, --job <path>","Path to the job file").option("--no-log","Do not write the output to a log file").option("-d, --debug","Print additional debug information").option("--args <args...>","Additional arguments in the form key=value");k.parse(process.argv);const u=k.opts(),v={};u.args&&u.args.forEach(e=>{const[t,n]=e.split("=");t&&n&&(v[t.trim()]=n.trim())}),r.setOptions(u),u.log&&await r.initWriter(),u.debug&&(r.debug?.group("Options"),r.debug?.log(u),r.debug?.log("Additional Arguments:"),r.debug?.log(v));let H,F;try{H=await We(u.config??null,u),F=await me(u.job??null,u)}catch(e){r.debug?.log(e.stack),console.error(`${e.stack}`),k.outputHelp(),process.exit(1)}const N=Be(F.using,H,u);N||(console.error("AI Provider is not valid. Please check your job file."),k.outputHelp(),process.exit(1)),r.info.group("All systems operational. Running job...");const Ve=Date.now();u.dryRun&&r.info.log("Dry run mode enabled. No API calls will be made.");const I={in:0,out:0};for(const[e,t]of Object.entries(F.jobs))r.info.group(`Executing "${e}"`),W(t)?await Fe(t,N,v,u,I):await G(t,N,v,u,I);r.info.group("Usage"),r.info.log(`Total run time: ${Date.now()-Ve}ms`),r.info.log(`Input tokens: ${I.in} `),r.info.log(`Output tokens: ${I.out} `),r.info.group("Complete. Goodbye");
