var Ee=Object.defineProperty;var c=(t,e)=>Ee(t,"name",{value:e,configurable:!0});import Ie from"@anthropic-ai/sdk";import{GoogleGenAI as we,Type as Te,FinishReason as w}from"@google/genai";import Pe from"openai";import{serializeError as Ae}from"serialize-error";import{readFile as ve,access as Ne,constants as Re}from"fs/promises";import{glob as ne}from"glob";import{readFile as x,access as re,stat as Oe,writeFile as Se,mkdir as Me}from"node:fs/promises";import{resolve as Z,extname as oe,dirname as ke}from"node:path";class E extends Error{static{c(this,"AxleError")}code;id;details;constructor(e,s){super(e,{cause:s?.cause}),this.name=this.constructor.name,this.code=s?.code||"AXLE_ERROR",this.id=s?.id,this.details=s?.details,Object.setPrototypeOf(this,E.prototype)}}const O={CLAUDE_OPUS_4_20250514:"claude-opus-4-20250514",CLAUDE_OPUS_4_LATEST:"claude-opus-4-0",CLAUDE_SONNET_4_20250514:"claude-sonnet-4-20250514",CLAUDE_SONNET_4_LATEST:"claude-sonnet-4-0",CLAUDE_3_7_SONNET_20250219:"claude-3-7-sonnet-20250219",CLAUDE_3_7_SONNET_LATEST:"claude-3-7-sonnet-latest",CLAUDE_3_5_HAIKU_20241022:"claude-3-5-haiku-20241022",CLAUDE_3_5_HAIKU_LATEST:"claude-3-5-haiku-latest"},ie=[O.CLAUDE_3_7_SONNET_LATEST,O.CLAUDE_3_7_SONNET_20250219,O.CLAUDE_3_5_HAIKU_LATEST,O.CLAUDE_3_5_HAIKU_20241022,O.CLAUDE_SONNET_4_LATEST,O.CLAUDE_SONNET_4_20250514,O.CLAUDE_OPUS_4_LATEST,O.CLAUDE_OPUS_4_20250514];class be{static{c(this,"Chat")}system;messages=[];tools=[];setToolSchemas(e){this.tools=e}addSystem(e){this.system=e}addUser(e,s,r){let o,n=[];if(typeof s=="string"?(o=s,n=r||[]):Array.isArray(s)&&(n=s),!o&&n.length===0){this.messages.push({role:"user",content:e});return}const i=[{type:"text",text:e}];o&&i.push({type:"instructions",instructions:o});for(const a of n)i.push({type:"file",file:a});this.messages.push({role:"user",content:i})}addAssistant(e,s){this.messages.push({role:"assistant",content:e,...s&&{toolCalls:s}})}addTools(e){this.messages.push({role:"tool",content:e})}hasFiles(){return this.messages.some(e=>Array.isArray(e.content)&&e.content.some(s=>s.type==="file"))}latest(){return this.messages[this.messages.length-1]}toString(){return JSON.stringify({system:this.system,messages:this.messages,tools:this.tools})}}function U(t,e=`

`){if(typeof t=="string")return t;const s=t.filter(o=>o.type==="text").map(o=>o.text),r=t.filter(o=>o.type==="instructions").map(o=>o.instructions);return s.length===0&&r.length===0?null:[...s,...r].join(e)}c(U,"getTextAndInstructions");function Ge(t){return typeof t=="string"?t:t.filter(e=>e.type==="text").map(e=>e.text).join(`

`)}c(Ge,"getTextContent");function $e(t){if(typeof t=="string")return null;const e=t.filter(s=>s.type==="instructions").map(s=>s.instructions);return e.length>0?e.join(`

`):null}c($e,"getInstructions");function D(t){return typeof t=="string"?[]:t.filter(e=>e.type==="file"&&e.file.type==="document").map(e=>e.file)}c(D,"getDocuments");function L(t){return typeof t=="string"?[]:t.filter(e=>e.type==="file"&&e.file.type==="image").map(e=>e.file)}c(L,"getImages");var y=(t=>(t[t.Stop=0]="Stop",t[t.Length=1]="Length",t[t.FunctionCall=2]="FunctionCall",t[t.Error=3]="Error",t))(y||{});const xe=O.CLAUDE_SONNET_4_LATEST;class Le{static{c(this,"AnthropicProvider")}name="Anthropic";client;model;constructor(e,s){this.model=s??xe,this.client=new Ie({apiKey:e})}createChatRequest(e,s={}){const{recorder:r}=s;return e.hasFiles()&&!ie.includes(this.model)&&r?.warn?.log(`Model ${this.model} may not support multimodal content. Use one of: ${ie.join(", ")}`),new Fe(this,e)}}class Fe{static{c(this,"AnthropicChatRequest")}constructor(e,s){this.provider=e,this.chat=s}async execute(e){const{recorder:s}=e,{client:r,model:o}=this.provider,n={model:o,max_tokens:4096,...Ce(this.chat)};s?.debug?.log(n);let i;try{const a=await r.messages.create(n);i=Ue(a)}catch(a){i={type:"error",error:{type:a.error.error.type??"Undetermined",message:a.error.error.message??"Unexpected error from Anthropic"},usage:{in:0,out:0},raw:a}}return s?.debug?.log(i),i}}function ae(t){switch(t){case"max_tokens":return y.Length;case"end_turn":return y.Stop;case"stop_sequence":return y.Stop;case"tool_use":return y.FunctionCall;default:return y.Error}}c(ae,"getStopReason$2");function Ce(t){const e=t.messages.map(r=>{if(r.role==="assistant"){const o=[];return o.push({type:"text",text:r.content}),r.toolCalls&&o.push(...r.toolCalls.map(n=>({type:"tool_use",id:n.id,name:n.name,input:n.arguments}))),{role:"assistant",content:o}}if(r.role==="tool")return{role:"user",content:r.content.map(o=>({type:"tool_result",tool_use_id:o.id,content:o.content}))};if(typeof r.content=="string")return{role:"user",content:r.content};{const o=[],n=U(r.content);n&&o.push({type:"text",text:n});const i=L(r.content);i.length>0&&o.push(...i.map(u=>({type:"image",source:{type:"base64",media_type:u.mimeType,data:u.base64}})));const a=D(r.content);return a.length>0&&o.push(...a.filter(u=>u.mimeType==="application/pdf").map(u=>({type:"document",source:{type:"base64",media_type:"application/pdf",data:u.base64}}))),{role:"user",content:o}}}),s=t.tools.map(r=>({name:r.name,description:r.description,input_schema:r.parameters}));return{system:t.system,messages:e,tools:s}}c(Ce,"prepareRequest$4");function Ue(t){const e=ae(t.stop_reason);if(e===y.Error)return{type:"error",error:{type:"Uncaught error",message:"Stop reason is not recognized."},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t};if(e===y.FunctionCall){const s=t.content[0],r=s.type==="text"?s.text:"",o=t.content.slice(1).map(n=>{if(n.type==="tool_use")return{id:n.id,name:n.name,arguments:n.input}}).filter(n=>n!==null);return{type:"success",id:t.id,model:t.model,reason:y.FunctionCall,message:{role:t.role,content:r,toolCalls:o},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}if(t.type=="message"){const s=t.content[0];if(s.type=="text")return{type:"success",id:t.id,model:t.model,reason:ae(t.stop_reason),message:{role:t.role,content:s.text},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}}c(Ue,"translate");const p={GEMINI_1_0_PRO_VISION_LATEST:"gemini-1.0-pro-vision-latest",GEMINI_PRO_VISION:"gemini-pro-vision",GEMINI_1_5_PRO_LATEST:"gemini-1.5-pro-latest",GEMINI_1_5_PRO_001:"gemini-1.5-pro-001",GEMINI_1_5_PRO_002:"gemini-1.5-pro-002",GEMINI_1_5_PRO:"gemini-1.5-pro",GEMINI_1_5_FLASH_LATEST:"gemini-1.5-flash-latest",GEMINI_1_5_FLASH_001:"gemini-1.5-flash-001",GEMINI_1_5_FLASH_001_TUNING:"gemini-1.5-flash-001-tuning",GEMINI_1_5_FLASH:"gemini-1.5-flash",GEMINI_1_5_FLASH_002:"gemini-1.5-flash-002",GEMINI_1_5_FLASH_8B:"gemini-1.5-flash-8b",GEMINI_1_5_FLASH_8B_001:"gemini-1.5-flash-8b-001",GEMINI_1_5_FLASH_8B_LATEST:"gemini-1.5-flash-8b-latest",GEMINI_1_5_FLASH_8B_EXP_0827:"gemini-1.5-flash-8b-exp-0827",GEMINI_1_5_FLASH_8B_EXP_0924:"gemini-1.5-flash-8b-exp-0924",GEMINI_2_5_PRO_EXP_03_25:"gemini-2.5-pro-exp-03-25",GEMINI_2_5_PRO_PREVIEW_03_25:"gemini-2.5-pro-preview-03-25",GEMINI_2_5_FLASH_PREVIEW_04_17:"gemini-2.5-flash-preview-04-17",GEMINI_2_5_FLASH_PREVIEW_05_20:"gemini-2.5-flash-preview-05-20",GEMINI_2_5_FLASH_PREVIEW_04_17_THINKING:"gemini-2.5-flash-preview-04-17-thinking",GEMINI_2_5_PRO_PREVIEW_05_06:"gemini-2.5-pro-preview-05-06",GEMINI_2_5_PRO_PREVIEW_06_05:"gemini-2.5-pro-preview-06-05",GEMINI_2_0_FLASH_EXP:"gemini-2.0-flash-exp",GEMINI_2_0_FLASH:"gemini-2.0-flash",GEMINI_2_0_FLASH_001:"gemini-2.0-flash-001",GEMINI_2_0_FLASH_EXP_IMAGE_GENERATION:"gemini-2.0-flash-exp-image-generation",GEMINI_2_0_FLASH_LITE_001:"gemini-2.0-flash-lite-001",GEMINI_2_0_FLASH_LITE:"gemini-2.0-flash-lite",GEMINI_2_0_FLASH_PREVIEW_IMAGE_GENERATION:"gemini-2.0-flash-preview-image-generation",GEMINI_2_0_FLASH_LITE_PREVIEW_02_05:"gemini-2.0-flash-lite-preview-02-05",GEMINI_2_0_FLASH_LITE_PREVIEW:"gemini-2.0-flash-lite-preview",GEMINI_2_0_PRO_EXP:"gemini-2.0-pro-exp",GEMINI_2_0_PRO_EXP_02_05:"gemini-2.0-pro-exp-02-05",GEMINI_EXP_1206:"gemini-exp-1206",GEMINI_2_0_FLASH_THINKING_EXP_01_21:"gemini-2.0-flash-thinking-exp-01-21",GEMINI_2_0_FLASH_THINKING_EXP:"gemini-2.0-flash-thinking-exp",GEMINI_2_0_FLASH_THINKING_EXP_1219:"gemini-2.0-flash-thinking-exp-1219",GEMINI_2_5_FLASH_PREVIEW_TTS:"gemini-2.5-flash-preview-tts",GEMINI_2_5_PRO_PREVIEW_TTS:"gemini-2.5-pro-preview-tts",LEARNLM_2_0_FLASH_EXPERIMENTAL:"learnlm-2.0-flash-experimental",GEMMA_3_1B_IT:"gemma-3-1b-it",GEMMA_3_4B_IT:"gemma-3-4b-it",GEMMA_3_12B_IT:"gemma-3-12b-it",GEMMA_3_27B_IT:"gemma-3-27b-it",GEMMA_3N_E4B_IT:"gemma-3n-e4b-it"},ce=[p.GEMINI_1_0_PRO_VISION_LATEST,p.GEMINI_PRO_VISION,p.GEMINI_1_5_PRO_LATEST,p.GEMINI_1_5_PRO_001,p.GEMINI_1_5_PRO_002,p.GEMINI_1_5_PRO,p.GEMINI_1_5_FLASH_LATEST,p.GEMINI_1_5_FLASH_001,p.GEMINI_1_5_FLASH_001_TUNING,p.GEMINI_1_5_FLASH,p.GEMINI_1_5_FLASH_002,p.GEMINI_1_5_FLASH_8B,p.GEMINI_1_5_FLASH_8B_001,p.GEMINI_1_5_FLASH_8B_LATEST,p.GEMINI_1_5_FLASH_8B_EXP_0827,p.GEMINI_1_5_FLASH_8B_EXP_0924,p.GEMINI_2_5_PRO_EXP_03_25,p.GEMINI_2_5_PRO_PREVIEW_03_25,p.GEMINI_2_5_FLASH_PREVIEW_04_17,p.GEMINI_2_5_FLASH_PREVIEW_05_20,p.GEMINI_2_5_FLASH_PREVIEW_04_17_THINKING,p.GEMINI_2_5_PRO_PREVIEW_05_06,p.GEMINI_2_5_PRO_PREVIEW_06_05,p.GEMINI_2_0_FLASH_EXP,p.GEMINI_2_0_FLASH,p.GEMINI_2_0_FLASH_001,p.GEMINI_2_0_FLASH_EXP_IMAGE_GENERATION,p.GEMINI_2_0_FLASH_LITE_001,p.GEMINI_2_0_FLASH_LITE,p.GEMINI_2_0_FLASH_PREVIEW_IMAGE_GENERATION,p.GEMINI_2_0_FLASH_LITE_PREVIEW_02_05,p.GEMINI_2_0_FLASH_LITE_PREVIEW,p.GEMINI_2_0_PRO_EXP,p.GEMINI_2_0_PRO_EXP_02_05,p.GEMINI_EXP_1206,p.GEMINI_2_0_FLASH_THINKING_EXP_01_21,p.GEMINI_2_0_FLASH_THINKING_EXP,p.GEMINI_2_0_FLASH_THINKING_EXP_1219,p.GEMINI_2_5_FLASH_PREVIEW_TTS,p.GEMINI_2_5_PRO_PREVIEW_TTS,p.LEARNLM_2_0_FLASH_EXPERIMENTAL,p.GEMMA_3_1B_IT,p.GEMMA_3_4B_IT,p.GEMMA_3_12B_IT,p.GEMMA_3_27B_IT,p.GEMMA_3N_E4B_IT],De=p.GEMINI_2_5_FLASH_PREVIEW_05_20;class He{static{c(this,"GoogleAIProvider")}name="GoogleAI";client;model;constructor(e,s){this.model=s??De,this.client=new we({apiKey:e})}createChatRequest(e,s={}){const{recorder:r}=s;return e.hasFiles()&&!ce.includes(this.model)&&r?.warn.log(`Model ${this.model} does not support multimodal content. Use one of: ${ce.join(", ")}`),new We(this,e)}}class We{static{c(this,"GoogleAIChatRequest")}constructor(e,s){this.provider=e,this.chat=s}async execute(e){const{recorder:s}=e,{client:r,model:o}=this.provider,n=Be(this.chat);s?.debug?.log(n);let i;try{const a=await r.models.generateContent({model:o,...n});i=Xe(a,e)}catch(a){s?.error?.log(a),i={type:"error",error:{type:a.name??"Undetermined",message:a.message??"Unexpected error from Google AI"},usage:{in:0,out:0},raw:a}}return s?.debug?.log(i),i}}function Be(t){let e;t.messages.length===1&&t.messages[0].role=="user"&&typeof t.messages[0].content=="string"?e=t.messages[0].content:e=t.messages.map(r=>{if(r.role==="user"){if(typeof r.content=="string")return{role:"user",parts:[{text:r.content}]};{const o=[],n=U(r.content);n&&o.push({text:n});const i=L(r.content);i.length>0&&o.push(...i.map(u=>({inlineData:{mimeType:u.mimeType,data:u.base64}})));const a=D(r.content);return a.length>0&&o.push(...a.map(u=>({inlineData:{mimeType:u.mimeType,data:u.base64}}))),{role:"user",parts:o}}}else if(r.role==="assistant"){const o={role:"assistant",parts:[]};return r.content!==void 0&&o.parts.push({text:r.content}),r.toolCalls&&(o.parts=o.parts.concat(r.toolCalls.map(n=>{let i;return typeof n.arguments=="string"?i=JSON.parse(n.arguments):i=n.arguments,{functionCall:{id:n.id??void 0,name:n.name,args:i}}}))),o}else if(r.role==="tool")return{role:"user",parts:r.content.map(o=>({functionResponse:{id:o.id??void 0,name:o.name,response:{output:o.content}}}))}});const s={};return t.system&&(s.systemInstruction=t.system),t.tools.length>0&&(s.tools=t.tools.map(r=>({functionDeclarations:[{name:r.name,description:r.description,parameters:{...r.parameters,type:Te.OBJECT}}]}))),{contents:e,config:s}}c(Be,"prepareRequest$3");function Xe(t,e){const{recorder:s}=e,r=t.usageMetadata.promptTokenCount,o=t.usageMetadata.totalTokenCount-r,n={in:r,out:o};if(!t)return{type:"error",error:{type:"InvalidResponse",message:"Invalid or empty response from Google AI"},usage:{in:0,out:0},raw:t};if(t.promptFeedback&&t.promptFeedback.blockReason)return{type:"error",error:{type:"Blocked",message:`Response blocked by Google AI: ${t.promptFeedback.blockReason}, ${t.promptFeedback.blockReasonMessage}`},usage:n,raw:t};if(!t.candidates||t.candidates.length===0)return{type:"error",error:{type:"InvalidResponse",message:"Invalid or empty response from Google AI"},usage:{in:0,out:0},raw:t};t.candidates.length>1&&s?.warn?.log(`We received ${t.candidates.length} response candidates`);const i=t.candidates[0],u=(i.content?.parts||[]).map(_=>_.text).filter(_=>_!==void 0).join(""),[l,f]=qe(i.finishReason);if(l){let _;return t.functionCalls&&(_=t.functionCalls.map(d=>({id:d.id,name:d.name,arguments:JSON.stringify(d.args)}))),{type:"success",id:t.responseId,model:t.modelVersion,reason:t.functionCalls?y.FunctionCall:f,message:{role:"assistant",...u?{content:u}:{},..._?{toolCalls:_}:{}},usage:n,raw:t}}else return{type:"error",error:{type:"Undetermined",message:`Unexpected stop reason: ${f}`},usage:n,raw:t}}c(Xe,"translateResponse$2");function qe(t){switch(t){case w.STOP:return[!0,y.Stop];case w.MAX_TOKENS:return[!0,y.Length];case w.FINISH_REASON_UNSPECIFIED:case w.SAFETY:case w.RECITATION:case w.LANGUAGE:case w.OTHER:case w.BLOCKLIST:case w.PROHIBITED_CONTENT:case w.SPII:case w.MALFORMED_FUNCTION_CALL:case w.IMAGE_SAFETY:return[!1,y.Error]}}c(qe,"getStopReason$1");const Ke="http://localhost:11434";class Je{static{c(this,"OllamaProvider")}name="Ollama";url;model;recorder;constructor(e,s){this.url=s||Ke,this.model=e}createChatRequest(e,s={}){const{recorder:r}=s;return e.hasFiles()&&r?.warn?.log(`Ollama model ${this.model} multimodal support depends on the specific model. Ensure you're using a vision-capable model like llava.`),new ze(this.url,this.model,e)}}class ze{static{c(this,"OllamaChatCompletionRequest")}chat;url;model;constructor(e,s,r){this.url=e,this.model=s,this.chat=r}async execute(e){const{recorder:s}=e,r={stream:!1,options:{temperature:.7},...Ye(this.chat,this.model)};s?.debug?.log(r);let o;try{const n=await fetch(`${this.url}/api/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!n.ok)throw console.log(n),new Error(`HTTP error! status: ${n.status}`);const i=await n.json();o=Ze(i)}catch(n){s?.error?.log("Error fetching Ollama response:",n),o={type:"error",error:{type:"OllamaError",message:n.message||"Unexpected error from Ollama"},usage:{in:0,out:0},raw:JSON.stringify(n)}}return s?.debug?.log(o),o}}function Ye(t,e){const s=[];t.system&&s.push({role:"system",content:t.system});let r;t.tools.length>0&&(r=t.tools.map(n=>({type:"function",function:n})));const o=t.messages.map(n=>{if(n.role==="tool")return n.content.map(i=>({role:"tool",tool_call_id:i.id,content:i.content}));if(n.role==="assistant"){const i=n.toolCalls?.map(a=>{const u=a.id;return{type:"function",function:{name:a.name,arguments:a.arguments},...u&&{id:u}}});return{role:n.role,content:n.content,...i&&{toolCalls:i}}}if(typeof n.content=="string")return{role:n.role,content:n.content};{const i=U(n.content),a=L(n.content).map(u=>u.base64);return{role:n.role,content:i,...a.length>0&&{images:a}}}}).flat(1);return{model:e,messages:[...s,...o],...r&&{tools:r}}}c(Ye,"prepareRequest$2");function Ze(t){if(t.done_reason==="stop"&&t.message){const e=t.message.content,s=[];if(t.message.tool_calls)for(const o of t.message.tool_calls)s.push({id:o.id,name:o.function.name,arguments:o.function.arguments});const r=s.length>0;return{type:"success",id:`ollama-${Date.now()}`,model:t.model,reason:r?y.FunctionCall:y.Stop,message:{role:"assistant",content:e,...r&&{toolCalls:s}},usage:{in:t.prompt_eval_count||0,out:t.eval_count||0},raw:t}}return{type:"error",error:{type:"OllamaError",message:"Unexpected error from Ollama"},usage:{in:0,out:0},raw:t}}c(Ze,"translateResponse$1");const g={GPT_4_1:"gpt-4.1",GPT_4_1_2025_04_14:"gpt-4.1-2025-04-14",GPT_4_1_MINI:"gpt-4.1-mini",GPT_4_1_MINI_2025_04_14:"gpt-4.1-mini-2025-04-14",GPT_4_1_NANO:"gpt-4.1-nano",GPT_4_1_NANO_2025_04_14:"gpt-4.1-nano-2025-04-14",GPT_4O:"gpt-4o",GPT_4O_2024_05_13:"gpt-4o-2024-05-13",GPT_4O_2024_08_06:"gpt-4o-2024-08-06",GPT_4O_2024_11_20:"gpt-4o-2024-11-20",GPT_4O_AUDIO_PREVIEW:"gpt-4o-audio-preview",GPT_4O_AUDIO_PREVIEW_2024_10_01:"gpt-4o-audio-preview-2024-10-01",GPT_4O_AUDIO_PREVIEW_2024_12_17:"gpt-4o-audio-preview-2024-12-17",GPT_4O_AUDIO_PREVIEW_2025_06_03:"gpt-4o-audio-preview-2025-06-03",GPT_4O_MINI:"gpt-4o-mini",GPT_4O_MINI_2024_07_18:"gpt-4o-mini-2024-07-18",GPT_4O_MINI_AUDIO_PREVIEW:"gpt-4o-mini-audio-preview",GPT_4O_MINI_AUDIO_PREVIEW_2024_12_17:"gpt-4o-mini-audio-preview-2024-12-17",GPT_4O_MINI_REALTIME_PREVIEW:"gpt-4o-mini-realtime-preview",GPT_4O_MINI_REALTIME_PREVIEW_2024_12_17:"gpt-4o-mini-realtime-preview-2024-12-17",GPT_4O_MINI_SEARCH_PREVIEW:"gpt-4o-mini-search-preview",GPT_4O_MINI_SEARCH_PREVIEW_2025_03_11:"gpt-4o-mini-search-preview-2025-03-11",GPT_4O_MINI_TRANSCRIBE:"gpt-4o-mini-transcribe",GPT_4O_MINI_TTS:"gpt-4o-mini-tts",GPT_4O_REALTIME_PREVIEW:"gpt-4o-realtime-preview",GPT_4O_REALTIME_PREVIEW_2024_10_01:"gpt-4o-realtime-preview-2024-10-01",GPT_4O_REALTIME_PREVIEW_2024_12_17:"gpt-4o-realtime-preview-2024-12-17",GPT_4O_REALTIME_PREVIEW_2025_06_03:"gpt-4o-realtime-preview-2025-06-03",GPT_4O_SEARCH_PREVIEW:"gpt-4o-search-preview",GPT_4O_SEARCH_PREVIEW_2025_03_11:"gpt-4o-search-preview-2025-03-11",GPT_4O_TRANSCRIBE:"gpt-4o-transcribe",O3_MINI:"o3-mini",O3_MINI_2025_01_31:"o3-mini-2025-01-31",O4_MINI:"o4-mini",O4_MINI_2025_04_16:"o4-mini-2025-04-16"},Qe=[g.GPT_4_1,g.GPT_4_1_2025_04_14,g.GPT_4_1_MINI,g.GPT_4_1_MINI_2025_04_14,g.GPT_4_1_NANO,g.GPT_4_1_NANO_2025_04_14,g.GPT_4O,g.GPT_4O_2024_05_13,g.GPT_4O_2024_08_06,g.GPT_4O_2024_11_20,g.GPT_4O_AUDIO_PREVIEW,g.GPT_4O_AUDIO_PREVIEW_2024_10_01,g.GPT_4O_AUDIO_PREVIEW_2024_12_17,g.GPT_4O_AUDIO_PREVIEW_2025_06_03,g.GPT_4O_MINI,g.GPT_4O_MINI_2024_07_18,g.GPT_4O_MINI_AUDIO_PREVIEW,g.GPT_4O_MINI_AUDIO_PREVIEW_2024_12_17,g.GPT_4O_MINI_REALTIME_PREVIEW,g.GPT_4O_MINI_REALTIME_PREVIEW_2024_12_17,g.GPT_4O_MINI_SEARCH_PREVIEW,g.GPT_4O_MINI_SEARCH_PREVIEW_2025_03_11,g.GPT_4O_MINI_TRANSCRIBE,g.GPT_4O_MINI_TTS,g.GPT_4O_REALTIME_PREVIEW,g.GPT_4O_REALTIME_PREVIEW_2024_10_01,g.GPT_4O_REALTIME_PREVIEW_2024_12_17,g.GPT_4O_REALTIME_PREVIEW_2025_06_03,g.GPT_4O_SEARCH_PREVIEW,g.GPT_4O_SEARCH_PREVIEW_2025_03_11,g.GPT_4O_TRANSCRIBE,g.O3_MINI,g.O3_MINI_2025_01_31,g.O4_MINI,g.O4_MINI_2025_04_16];class je{static{c(this,"OpenAIChatCompletionRequest")}constructor(e,s){this.provider=e,this.chat=s}async execute(e){const{recorder:s}=e,{client:r,model:o}=this.provider,n=et(this.chat,o);s?.debug?.heading.log("[Open AI Provider] Using the ChatCompletion API"),s?.debug?.log(n);let i;try{const a=await r.chat.completions.create(n);i=tt(a)}catch(a){s?.error?.log(a),i={type:"error",error:{type:a.type??"Undetermined",message:a.message??"Unexpected error from OpenAI"},usage:{in:0,out:0},raw:a}}return s?.debug?.log(i),i}}function Ve(t){switch(t){case"length":return y.Length;case"stop":return y.Stop;case"tool_calls":return y.FunctionCall;default:return y.Error}}c(Ve,"getStopReason");function et(t,e){const s=[];t.system&&s.push({role:"system",content:t.system});let r;t.tools.length>0&&(r=t.tools.map(n=>({type:"function",function:n})));const o=t.messages.map(n=>{if(n.role==="tool")return n.content.map(i=>({role:"tool",tool_call_id:i.id,content:i.content}));if(n.role==="assistant"){const i=n.toolCalls?.map(a=>{const u=a.id;return{type:"function",function:{name:a.name,arguments:typeof a.arguments=="string"?a.arguments:JSON.stringify(a.arguments)},...u&&{id:u}}});return{role:n.role,content:n.content,...i&&{toolCalls:i}}}if(typeof n.content=="string")return{role:n.role,content:n.content};{const i=[],a=U(n.content);a&&i.push({type:"text",text:a});const u=L(n.content);u.length>0&&i.push(...u.map(f=>({type:"image_url",image_url:{url:`data:${f.mimeType};base64,${f.base64}`}})));const l=D(n.content);return l.length>0&&i.push(...l.map(f=>({type:"file",file:{filename:f.name,file_data:`data:${f.mimeType};base64,${f.base64}`}}))),{role:n.role,content:i}}}).flat(1);return{model:e,messages:[...s,...o],...r&&{tools:r}}}c(et,"prepareRequest$1");function tt(t){if(t.choices.length>0){const e=t.choices[0],s=e.message.tool_calls?.map(r=>({id:r.id,name:r.function.name,arguments:r.function.arguments}));return{type:"success",id:t.id,model:t.model,reason:Ve(e.finish_reason),message:{content:e.message.content??"",role:e.message.role,toolCalls:s},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}return{type:"error",error:{type:"undetermined",message:"Unexpected response from OpenAI"},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}c(tt,"translateResponse");class st{static{c(this,"OpenAIResponsesAPI")}constructor(e,s){this.provider=e,this.chat=s}async execute(e){const{recorder:s}=e,{client:r,model:o}=this.provider,n=nt(this.chat,o);s?.debug?.heading.log("[Open AI Provider] Using the Responses API"),s?.debug?.log(n);let i;try{const a=await r.responses.create(n);i=rt(a)}catch(a){s?.error?.log(a),i={type:"error",error:{type:a.type??"Undetermined",message:a.message??"Unexpected error from OpenAI"},usage:{in:0,out:0},raw:a}}return s?.debug?.log(i),i}}function nt(t,e){const s=t.messages.map(n=>{if(n.role==="tool")return n.content.map(i=>({type:"function_call_output",call_id:i.id,output:i.content}));if(n.role==="assistant"){const i=n.toolCalls?.map(a=>{const u=a.id;return{type:"function",function:{name:a.name,arguments:typeof a.arguments=="string"?a.arguments:JSON.stringify(a.arguments)},...u&&{id:u}}});return{role:n.role,content:n.content,...i&&{toolCalls:i}}}if(typeof n.content=="string")return{role:n.role,content:n.content};{const i=[],a=Ge(n.content);a&&i.push({type:"input_text",text:a});const u=L(n.content);u.length>0&&i.push(...u.map(f=>({type:"input_image",image_url:`data:${f.mimeType};base64,${f.base64}`})));const l=D(n.content);return l.length>0&&i.push(...l.map(f=>({type:"input_file",filename:f.path,file_data:`data:${f.mimeType};base64,${f.base64}`}))),{role:n.role,content:i}}}).flat(1),r={model:e,input:s},o=t.latest();if(o&&o.role==="user"){let n="";const i=$e(o.content);t.system&&(n=t.system),i&&(n=n?`${n}

${i}`:i),n&&(r.instructions=n)}return t.tools.length>0&&(r.tools=t.tools.map(n=>({type:"function",strict:!0,...n}))),r}c(nt,"prepareRequest");function rt(t){if(t.error)return{type:"error",error:{type:t.error.code||"undetermined",message:t.error.message||"Response generation failed"},usage:{in:t.usage?.input_tokens??0,out:t.usage?.output_tokens??0},raw:t};const e=t.output?.filter(s=>s.type==="function_call")?.map(s=>({id:s.id||"",name:s.function?.name||"",arguments:s.function?.arguments||""}));return{type:"success",id:t.id,model:t.model||"",reason:t.incomplete_details?y.Error:y.Stop,message:{content:t.output_text||"",role:"assistant",...e?.length&&{toolCalls:e}},usage:{in:t.usage?.input_tokens??0,out:t.usage?.output_tokens??0},raw:t}}c(rt,"translateResponseToAIResponse");const ot=g.GPT_4_1;class it{static{c(this,"OpenAIProvider")}name="OpenAI";client;model;constructor(e,s){this.model=s||ot,this.client=new Pe({apiKey:e})}createChatRequest(e,s={}){const{recorder:r}=s;return Qe.includes(this.model)?new st(this,e):new je(this,e)}}function at(t,e){if(!e||Object.keys(e).length===0)throw new E(`The provider ${t} is not configured. Please check your configuration.`);switch(t){case"openai":return new it(e["api-key"],e.model);case"anthropic":return new Le(e["api-key"],e.model);case"googleai":return new He(e["api-key"],e.model);case"ollama":{const s=e;return new Je(s.model,s.url)}default:throw new E("The provider is unsupported")}}c(at,"getProvider");class te extends E{static{c(this,"TaskError")}constructor(e,s){super(e,{code:"TASK_ERROR",id:s?.id,details:{taskType:s?.taskType,taskIndex:s?.taskIndex,...s?.details},cause:s?.cause}),Object.setPrototypeOf(this,te.prototype)}}const I={Running:"running",Success:"success",PartialSuccess:"partialSuccess",Fail:"fail"};var P=(t=>(t[t.Trace=10]="Trace",t[t.Debug=20]="Debug",t[t.Info=30]="Info",t[t.Warn=40]="Warn",t[t.Error=50]="Error",t[t.Fatal=60]="Fatal",t))(P||{});class ct{static{c(this,"Recorder")}instanceId=crypto.randomUUID();currentLevel=P.Info;logs=[];writers=[];_debug;_info;_warn;_error;constructor(){this.buildMethods()}buildMethods(){this._debug=P.Debug>=this.currentLevel?this.createLoggingFunction(P.Debug):null,this._info=P.Info>=this.currentLevel?this.createLoggingFunction(P.Info):null,this._warn=P.Warn>=this.currentLevel?this.createLoggingFunction(P.Warn):null,this._error=this.createLoggingFunction(P.Error)}set level(e){this.currentLevel=e,this.buildMethods()}get level(){return this.currentLevel}get info(){return this._info}get warn(){return this._warn}get error(){return this._error}get debug(){return this._debug}subscribe(e){this.writers.includes(e)||this.writers.push(e)}unsubscribe(e){const s=this.writers.indexOf(e);s!==-1&&this.writers.splice(s,1)}publish(e){this.logs.push(e);for(const s of this.writers)s.handleEvent(e)}logFunction(e,s,...r){let o=r.map(n=>typeof n=="string"?{message:n}:n instanceof Error?Ae(n):n);this.publish({level:e,time:Date.now(),kind:s,payload:o})}createLoggingFunction(e){return{log:this.logFunction.bind(this,e,"body"),heading:{log:this.logFunction.bind(this,e,"heading")}}}getLogs(e=P.Info){return this.logs.filter(s=>s.level>=e)}async shutdown(){for(const e of this.writers)typeof e.flush=="function"&&await e.flush()}}async function ut(t,e){const{defaults:s,tag:r}=e;let o=null,n="";if(t)try{n=Z(t),o=await x(n,{encoding:"utf-8"})}catch{throw new Error(`${r} not found, see --help for details`)}else{for(const i of s.formats)try{n=Z(s.name+"."+i),o=await x(n,{encoding:"utf-8"});break}catch{continue}if(o===null)throw new Error(`${r} not found, see --help for details`)}return{content:o,format:n.split(".").pop()??""}}c(ut,"searchAndLoadFile");async function lt(t,e){let s="";for(const r of t){const o=await ne(r);e?.debug?.log(`many-files parser. For glob "${r}", found ${o.length} files.`);const n=await Promise.all(o.map(async i=>{const a=await x(i,"utf-8");return i+`:
`+a}));s+=n.join(`
`)}return s}c(lt,"loadManyFiles");function ft(t,e){t=t.replace("**/*","**");const s=/(?<asterisks>\*{1,2})(?<extension>\.[^\\/]+)?/,r=t.match(s);if(r){let o="";return r.groups?.asterisks.length==1?o+=e.stem:o+=e.dir+e.stem,r.groups?.extension?o+=r.groups.extension:o+=e.ext,t.replace(r[0],o)}return t}c(ft,"replaceFilePattern");function pt(t){const e=/(?<name>[^\\/]+)(?<extension>\.[^\\/]+)$/,s=t.match(e);return s&&s.length>0&&s.groups?{abs:t,dir:t.replace(s[0],""),ext:s.groups.extension,stem:s.groups.name,name:s[0]}:null}c(pt,"pathToComponents");async function ue(t){const e=ke(t);try{await re(e)}catch{await Me(e),await ue(e)}}c(ue,"ensureDirectoryExistence");async function _t({filePath:t,content:e}){await ue(t),await Se(t,e)}c(_t,"writeFileWithDirectories");const H=[".jpg",".jpeg",".png",".gif",".webp",".bmp",".tiff"],W=[".pdf"],B=[".txt",".md",".markdown"],le=20*1024*1024;function gt(t){return t.type==="text"}c(gt,"isTextFileInfo");function dt(t){return t.type==="image"||t.type==="document"}c(dt,"isBase64FileInfo");function mt(t){const e=oe(t).toLowerCase();if(B.includes(e))return"utf-8";if(H.includes(e)||W.includes(e))return"base64";{const s=[...B,...H,...W];throw new Error(`Unsupported file type: ${e}. Supported types: ${s.join(", ")}`)}}c(mt,"getEncodingForFile");async function X(t,e){const s=Z(t);try{await re(s)}catch{throw new Error(`File not found: ${t}`)}const r=await Oe(s);if(r.size>le)throw new Error(`File too large: ${r.size} bytes. Maximum allowed: ${le} bytes`);const o=oe(s).toLowerCase(),n=s.split("/").pop()||"";if((e||mt(s))==="utf-8"){if(!B.includes(o))throw new Error(`Unsupported text file type: ${o}. Supported types: ${B.join(", ")}`);let a;switch(o){case".txt":a="text/plain";break;case".md":case".markdown":a="text/markdown";break;default:a="text/plain"}const u=await x(s,"utf-8");return{path:s,content:u,mimeType:a,size:r.size,name:n,type:"text"}}else{let a,u;if(H.includes(o))switch(a="image",o){case".jpg":case".jpeg":u="image/jpeg";break;case".png":u="image/png";break;case".gif":u="image/gif";break;case".webp":u="image/webp";break;case".bmp":u="image/bmp";break;case".tiff":u="image/tiff";break;default:u="image/jpeg"}else if(W.includes(o))a="document",u="application/pdf";else throw new Error(`Unsupported file type: ${o}. Supported types: ${[...H,...W].join(", ")}`);const f=(await x(s)).toString("base64");return{path:s,base64:f,mimeType:u,size:r.size,name:n,type:a}}}c(X,"loadFileContent");function ht(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):yt(t.using,e)?!t.jobs||typeof t.jobs!="object"?(e&&(e.value="Missing or invalid 'jobs' property"),!1):fe(t.jobs,e)?!0:(e&&(e.value=`Invalid 'jobs' property: ${e?.value}`),!1):(e&&(e.value=`Invalid 'using' property: ${e?.value}`),!1)}c(ht,"isJobConfig");function yt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(typeof t.engine!="string")return e&&(e.value="Missing or invalid 'engine' property"),!1;if(!["openai","anthropic","ollama","googleai"].includes(t.engine))return e&&(e.value="Invalid provider type. Must be 'openai', 'anthropic', 'googleai', or 'ollama'"),!1;switch(t.engine){case"ollama":if("model"in t&&typeof t.model!="string")return e&&(e.value="Property 'model' must be a string"),!1;if("url"in t&&typeof t.url!="string")return e&&(e.value="Property 'url' must be a string"),!1;break;case"googleai":case"anthropic":case"openai":if("api-key"in t&&typeof t["api-key"]!="string")return e&&(e.value="Property 'api-key' must be a string"),!1;if("model"in t&&typeof t.model!="string")return e&&(e.value="Property 'model' must be a string"),!1;break}return!0}c(yt,"isUsing");function fe(t,e){for(const[s,r]of Object.entries(t))if(!Et(r,e))return e&&(e.value=`Invalid job '${s}': ${e?.value}`),!1;return!0}c(fe,"isDAGJob");function Et(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(!It(t,e))return!1;if("dependsOn"in t&&t.dependsOn!==void 0){const s=t.dependsOn;if(typeof s!="string")if(Array.isArray(s)){for(let r=0;r<s.length;r++)if(typeof s[r]!="string")return e&&(e.value=`Dependency at index ${r} must be a string`),!1}else return e&&(e.value="Property 'dependsOn' must be a string or array of strings"),!1}return!0}c(Et,"isDAGJobValue");function It(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):"batch"in t?Tt(t,e):wt(t,e)}c(It,"isJob");function wt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if("batch"in t)return e&&(e.value="Serial job should not have a batch property"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const s of t.tools)if(typeof s!="string")return e&&(e.value="All tools must be strings"),!1}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let s=0;s<t.steps.length;s++)if(!pe(t.steps[s],e))return e&&(e.value=`Invalid step at index ${s}: ${e?.value}`),!1;return!0}c(wt,"isSerialJob");function Tt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const s of t.tools)if(typeof s!="string")return e&&(e.value="All tools must be strings"),!1}if(!Array.isArray(t.batch))return e&&(e.value="Property 'batch' must be an array"),!1;for(let s=0;s<t.batch.length;s++)if(!Pt(t.batch[s],e))return e&&(e.value=`Invalid batch item at index ${s}: ${e?.value}`),!1;if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let s=0;s<t.steps.length;s++)if(!pe(t.steps[s],e))return e&&(e.value=`Invalid step at index ${s}: ${e?.value}`),!1;return!0}c(Tt,"isBatchJob");function Pt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="files")return e&&(e.value="Property 'type' must be 'files'"),!1;if(typeof t.source!="string")return e&&(e.value="Property 'source' must be a string"),!1;if(typeof t.bind!="string")return e&&(e.value="Property 'bind' must be a string"),!1;if(t["skip-if"]!==void 0){if(!Array.isArray(t["skip-if"]))return e&&(e.value="Property 'skip-if' must be an array"),!1;for(let s=0;s<t["skip-if"].length;s++)if(!At(t["skip-if"][s],e))return e&&(e.value=`Invalid skip condition at index ${s}: ${e?.value}`),!1}return!0}c(Pt,"isBatchOptions");function At(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.type!=="file-exist"?(e&&(e.value="Property 'type' must be 'file-exist'"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):!0}c(At,"isSkipOptions");function pe(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):!t.uses||typeof t.uses!="string"?(e&&(e.value="Step must have a string 'uses' property"),!1):t.uses==="chat"?vt(t,e):t.uses==="write-to-disk"?Nt(t,e):(e&&(e.value=`Unknown uses type: ${t.uses}`),!1)}c(pe,"isStep");function vt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.uses!=="chat")return e&&(e.value="Uses must be 'chat'"),!1;if(typeof t.message!="string")return e&&(e.value="Property 'message' must be a string"),!1;if(t.output!==void 0){if(!t.output||typeof t.output!="object"||Array.isArray(t.output))return e&&(e.value="Property 'output' must be an object"),!1;const s=["string","string[]","number","boolean"];for(const[r,o]of Object.entries(t.output))if(typeof r!="string"||typeof o!="string"||!s.includes(o))return e&&(e.value="Property 'output' must be a Record<string, ResTypeStrings> where ResTypeStrings is 'string' | 'string[]' | 'number' | 'boolean'"),!1}if(t.system!==void 0&&typeof t.system!="string")return e&&(e.value="Property 'system' must be a string"),!1;if(t.replace!==void 0){if(!Array.isArray(t.replace))return e&&(e.value="Property 'replace' must be an array"),!1;for(let s=0;s<t.replace.length;s++)if(!Rt(t.replace[s],e))return e&&(e.value=`Invalid replace at index ${s}: ${e?.value}`),!1}if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const s of t.tools)if(typeof s!="string")return e&&(e.value="All tools must be strings"),!1}if(t.images!==void 0){if(!Array.isArray(t.images))return e&&(e.value="Property 'images' must be an array"),!1;for(let s=0;s<t.images.length;s++)if(!Ot(t.images[s],e))return e&&(e.value=`Invalid image at index ${s}: ${e?.value}`),!1}if(t.documents!==void 0){if(!Array.isArray(t.documents))return e&&(e.value="Property 'documents' must be an array"),!1;for(let s=0;s<t.documents.length;s++)if(!St(t.documents[s],e))return e&&(e.value=`Invalid document at index ${s}: ${e?.value}`),!1}if(t.references!==void 0){if(!Array.isArray(t.references))return e&&(e.value="Property 'references' must be an array"),!1;for(let s=0;s<t.references.length;s++)if(!Mt(t.references[s],e))return e&&(e.value=`Invalid reference at index ${s}: ${e?.value}`),!1}return!0}c(vt,"isChatStep");function Nt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.uses!=="write-to-disk")return e&&(e.value="Uses must be 'write-to-disk'"),!1;if(typeof t.output!="string")return e&&(e.value="Property 'output' must be a string"),!1;if(t.keys!==void 0&&typeof t.keys!="string")if(Array.isArray(t.keys)){for(let s=0;s<t.keys.length;s++)if(typeof t.keys[s]!="string")return e&&(e.value=`Key at index ${s} must be a string`),!1}else return e&&(e.value="Property 'keys' must be a string or array of strings"),!1;return!0}c(Nt,"isWriteToDiskStep");function Rt(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(typeof t.pattern!="string")return e&&(e.value="Property 'pattern' must be a string"),!1;if(t.source!=="file")return e&&(e.value="Property 'source' must be 'file'"),!1;if(typeof t.files!="string"&&!Array.isArray(t.files))return e&&(e.value="Property 'files' must be a string or an array of strings"),!1;if(Array.isArray(t.files)){for(let s=0;s<t.files.length;s++)if(typeof t.files[s]!="string")return e&&(e.value=`Files entry at index ${s} must be a string`),!1}return!0}c(Rt,"isReplace");function Ot(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.file!="string"?(e&&(e.value="Property 'file' must be a string"),!1):!0}c(Ot,"isImageReference");function St(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.file!="string"?(e&&(e.value="Property 'file' must be a string"),!1):!0}c(St,"isDocumentReference");function Mt(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.file!="string"?(e&&(e.value="Property 'file' must be a string"),!1):!0}c(Mt,"isTextFileReference");class kt{static{c(this,"FileRunPlanner")}constructor(e,s,r=[]){this.source=e,this.bind=s,this.skipConditions=r}async plan(e){const s=[],r=await ne(this.source,{withFileTypes:!0});for(const o of r){const n=o.fullpath(),i=pt(n);let a=!1;for(const u of this.skipConditions)if(a=await u.eval({components:i}),a)break;if(!a){const u=await ve(n,"utf-8"),l={variables:{[this.bind]:u,...i},tasks:e};s.push(l)}}return s}}class bt{static{c(this,"MultiPlanner")}planners;constructor(e){this.planners=e}async plan(e){const s=this.planners.map(async o=>await o.plan(e));return(await Promise.all(s)).flat()}}function Q(t,e,s="{{}}"){const r=s==="{{}}"?/\{\{(.*?)\}\}/g:/\{(.*?)\}/g;return t=t.replace(r,(o,n)=>{if(Object.prototype.hasOwnProperty.call(e,n)){const i=e[n];return i==null?"":String(i)}return o}),t}c(Q,"replaceVariables");class Gt{static{c(this,"FileExistSkipCondition")}constructor(e){this.pattern=e}type="file-exist";async eval(e){const s=Q(this.pattern,e.components,"{}");try{return await Ne(s,Re.F_OK),!0}catch{return!1}}}var N=(t=>(t.String="string",t.List="string[]",t.Number="number",t.Boolean="boolean",t))(N||{});const _e={response:N.String};class ge{static{c(this,"AbstractInstruct")}type="instruct";_result=void 0;prompt;system=null;inputs={};tools={};files=[];textReferences=[];resFormat;rawResponse;finalPrompt;constructor(e,s){this.prompt=e,this.resFormat=s}setInputs(e){this.inputs=e}addInput(e,s){this.inputs[e]=s}addTools(e){for(const s of e)this.tools[s.name]=s}addTool(e){this.tools[e.name]=e}addImage(e){if(e.type!=="image")throw new Error(`Expected image file, got ${e.type}`);const s=e;this.files.push(s)}addDocument(e){if(e.type!=="document")throw new Error(`Expected document file, got ${e.type}`);const s=e;this.files.push(s)}addFile(e){if(!dt(e))throw new Error(`Expected image or document file, got ${e.type}`);this.files.push(e)}addReference(e,s){if(typeof e=="string"){this.textReferences.push({content:e,name:s?.name});return}if(gt(e))this.textReferences.push({content:e.content,name:s?.name??e.name});else throw new Error(`Expected text file, got ${e.type}`)}hasTools(){return Object.keys(this.tools).length>0}hasFiles(){return this.files.length>0}get result(){return this._result}compile(e,s={}){const r=this.getFinalUserPrompt(e,s),o=this.getFormatInstructions();return{message:r,instructions:o}}getFinalUserPrompt(e,s={}){const{recorder:r,options:o}=s,n={...e,...this.inputs};let i=Q(this.prompt,n);if(this.textReferences.length>0){i+=`

`;for(const[a,u]of this.textReferences.entries()){const l=u.name?`: ${u.name}`:"";i+=`## Reference ${a+1}${l}

\`\`\`${u.content}'''

`}}if(o?.warnUnused){const a=i.match(/\{\{(.*?)\}\}/g);if(a)throw r?.error.log(`Warning unused variables ${a.join(", ")}`),new Error(`Unused variables: ${a.join(", ")}`)}return i}getFormatInstructions(){let e="";for(const[s,r]of Object.entries(this.resFormat))switch(r){case N.String:e+=`Use <${s}></${s}> to indicate the answer for ${s}. The answer must be a string.
`;break;case N.Number:e+=`Use <${s}></${s}> to indicate the answer for ${s}. the answer must be a number.
`;break;case N.Boolean:e+=`Use <${s}></${s}> to indicate the answer for ${s}. The answer must be a true/false.
`;break;case N.List:e+=`Use <${s}></${s}> to indicate the answer for ${s}. The answer must be a list of strings. Each string should be in a new line.
`;break}return e}finalize(e,s){this.rawResponse=e;const r={},o=Object.keys(this.resFormat);if(o.length===0){if(e.trim()==="{}"||e.trim()==="")return{};throw new Error("Output format is empty, but rawValue is not an empty object representation or empty string.")}s=s||this.parseTaggedSections(e);for(const n of o){const i=n;let a;const u=s.tags[i];if(u)a=u;else throw new Error(`Expected results with tag ${i} but it does not exist`);const l=this.resFormat[n];try{const f=this.typeResponses(l,a);r[n]=f}catch(f){throw new Error(`Cannot convert value of key ${i} to ${l}: ${f.message}`)}}return this._result=r,r}parseTaggedSections(e){const s=/<(\w+)>(.*?)<\/\1>/gs,r={};let o=e;return o=o.replace(s,(n,i,a)=>(r[i]=a,"")),{tags:r,remaining:o.trim()}}typeResponses(e,s){let r;switch(e){case N.String:r=s;break;case N.Number:if(r=parseFloat(s),isNaN(r))throw new Error(`Cannot parse '${s}' as number. Expected a numeric string.`);break;case N.Boolean:const o=s.toLowerCase();if(o==="true")r=!0;else if(o==="false")r=!1;else throw new Error(`Cannot parse '${s}' as boolean. Expected 'true' or 'false'.`);break;case N.List:s===""?r=[]:r=s.split(`
`).map(n=>n.trim()).filter(n=>n.length>0);break}return r}}class G extends ge{static{c(this,"Instruct")}constructor(e,s){super(e,s)}static with(e,s){return s?new G(e,s):new G(e,_e)}}function F(t){return Array.isArray(t)?t:[t]}c(F,"arrayify");function A(t,e){return e?`${e}:${t.slice(0,8)}`:t.slice(0,8)}c(A,"friendly");function $t(t){return new Promise(e=>setTimeout(e,t))}c($t,"delay");const xt={name:"brave",description:"Perform a search using the Brave search engine",parameters:{type:"object",properties:{searchTerm:{type:"string",description:"The search term to query"}},required:["searchTerm"]}};class Lt{static{c(this,"BraveSearchTool")}name="brave";schema=xt;apiKey;throttle;lastExecTime=0;constructor(e){e&&this.setConfig(e)}setConfig(e){const{rateLimit:s}=e;this.apiKey=e["api-key"],this.throttle=s?1100/s:void 0}async execute(e,s={}){const{searchTerm:r}=e,{recorder:o}=s;if(o?.debug?.heading.log(`Brave: searching for ${r}`),this.throttle){for(;Date.now()-this.lastExecTime<this.throttle;)await $t(this.throttle-(Date.now()-this.lastExecTime));this.lastExecTime=Date.now()}try{const n=this.apiKey,i="https://api.search.brave.com/res/v1/web/search",a=new URL(i);a.searchParams.append("q",r),a.searchParams.append("format","json");const u=await fetch(a.toString(),{method:"GET",headers:{Accept:"application/json","X-Subscription-Token":n}});if(!u.ok)throw new Error(`[Brave] HTTP error ${u.status}: ${u.statusText}`);return await u.json()}catch(n){throw o?.error.log("[Brave] Error fetching search results:",n),n}}}const Ft=new Lt,Ct={name:"calculator",description:"Performs basic arithmetic operations",parameters:{type:"object",properties:{operation:{type:"string",description:"The operation to perform (add, subtract, multiply, divide)",enum:["add","subtract","multiply","divide"]},a:{type:"number",description:"First operand"},b:{type:"number",description:"Second operand"}},required:["operation","a","b"]}},Ut={name:"calculator",schema:Ct,execute:c(async t=>{const{operation:e,a:s,b:r}=t;switch(e){case"add":return`${s} + ${r} = ${s+r}`;case"subtract":return`${s} - ${r} = ${s-r}`;case"multiply":return`${s} * ${r} = ${s*r}`;case"divide":if(r===0)throw new Error("Cannot divide by zero");return`${s} / ${r} = ${s/r}`;default:throw new Error(`Unknown operation: ${e}`)}},"execute")};class Dt{static{c(this,"ToolRegistry")}executables={};config;setConfig(e){this.config=e}register(e){if(this.executables[e.name])throw new Error(`Tool with name '${e.name}' is already registered`);this.executables[e.name]=e}get(e){const s=this.executables[e];if(!s)throw new Error(`Tool '${e}' is not registered`);return s.setConfig?.(this.config[e]),s}}let C;function de(){return C||(C=new Dt,C.register(Ut),C.register(Ft)),C}c(de,"getToolRegistry");const Ht={async convert(t,e){const{recorder:s,toolNames:r}=e,{message:o,system:n,replace:i}=t;let a;t.output?a=G.with(o,t.output):a=G.with(o),n&&(a.system=n);const u=[...new Set([...r??[],...t.tools??[]])];for(const l of u){const f=de().get(l);a.addTool(f)}if(i){for(const l of i)if(l.source==="file"){const f=F(l.files),_=await lt(f,s);a.addInput(l.pattern,_)}}if(t.images)for(const l of t.images)try{const f=await X(l.file,"base64");a.addFile(f)}catch(f){throw new Error(`Failed to load image '${l.file}': ${f.message}`)}if(t.documents)for(const l of t.documents)try{const f=await X(l.file,"base64");a.addFile(f)}catch(f){throw new Error(`Failed to load document '${l.file}': ${f.message}`)}if(t.references)for(const l of t.references)try{const f=await X(l.file,"utf-8");a.addReference(f)}catch(f){throw new Error(`Failed to load reference file '${l.file}': ${f.message}`)}return a}};class Wt{static{c(this,"StepToClassRegistry")}converters=new Map;get(e){const s=this.converters.get(e);if(!s)throw new Error(`No converter registered for step: ${e}`);return s}register(e,s){this.converters.set(e,s)}}class j{static{c(this,"WriteOutputTask")}constructor(e,s=["response"]){this.output=e,this.keys=s}type="write-to-disk"}const Bt={async convert(t){if(t.keys){const e=F(t.keys);return new j(t.output,e)}return new j(t.output)}},V=new Wt;V.register("write-to-disk",Bt),V.register("chat",Ht);async function q(t,e){const{recorder:s}=e,r=t.tools??void 0,o=t.steps.map(async n=>(n.uses,await V.get(n.uses).convert(n,{recorder:s,toolNames:r})));return Promise.all(o)}c(q,"configToTasks");async function me(t,e){const{batch:s}=t;return s.length===1?he(s[0]):new bt(s.map(r=>he(r)))}c(me,"configToPlanner");function he(t){switch(t.type){case"files":let e;return t["skip-if"]&&(e=t["skip-if"].map(r=>Xt(r))),new kt(t.source,t.bind,e)}}c(he,"batchOptionsToPlanner");function Xt(t){switch(t.type){case"file-exist":return new Gt(t.pattern)}}c(Xt,"skipOptionsToSkipConditions");function qt(t){return t.success===!1&&t.error!==void 0}c(qt,"isErrorResult");function K(t,e){return{response:t,stats:e,success:!0}}c(K,"createResult");function J(t,e,s){return{response:e,stats:s,error:t,success:!1}}c(J,"createErrorResult");class Kt{static{c(this,"WriteToDiskTaskHandler")}taskType="write-to-disk";canHandle(e){return e&&typeof e=="object"&&"type"in e&&e.type==="write-to-disk"}async execute(e){const{task:s,variables:r,options:o={},recorder:n}=e,i=s.output,a=s.keys??[];if(o?.warnUnused){const f=a.filter(_=>!(_ in r));f.length>0&&n?.warn?.log(`[Write To Disk] The following keys were not found in the variables: ${f.join(", ")}`)}let u="";if(a.length===1?u=r[a[0]]??"<not found>":u=a.map(f=>`[${f}]:
${r[f]??"<not found>"}
`).join(`
`),o?.dryRun){n?.info?.log("[Dry run] Write to Disk is not executed.");return}let l="";i.includes("*")?l=ft(i,r.file):l=Q(i,r,"{}"),await _t({filePath:l,content:u})}}var z=(t=>(t.LastResult="lastResult",t))(z||{});function Jt(t,e,s){const{options:r,recorder:o}=s,n=r?.warnUnused??!0;for(const[i,a]of Object.entries(t))n&&e[i]&&o?.warn?.log(`Warning: Variable "${i}" is being overwritten. Previous value: ${e[i]}, new value: ${a}`),e[i]=a}c(Jt,"setResultsIntoVariables");class zt{static{c(this,"ChatTaskHandler")}taskType="instruct";canHandle(e){return e&&typeof e=="object"&&"type"in e&&e.type==="instruct"}async execute(e){const{task:s,...r}=e;await Yt({instruct:s,...r})}}async function Yt(t){const{instruct:e,chat:s,provider:r,stats:o,variables:n,options:i,recorder:a}=t;e.system&&s.addSystem(e.system);const{message:u,instructions:l}=e.compile(n,{recorder:a,options:i});if(e.hasFiles()?s.addUser(u,l,e.files):s.addUser(u,l),e.hasTools()){const _=Qt(e.tools);s.setToolSchemas(_)}if(i?.dryRun)return a?.debug?.log(s),{action:"complete"};let f=!0;for(;f;){const d=await r.createChatRequest(s,{recorder:a}).execute({recorder:a});if(o.in+=d.usage.in,o.out+=d.usage.out,d.type==="error")throw new Error(JSON.stringify(d.error));if(d.type==="success")switch(d.reason){case y.Stop:{if(d.message.content){const h=d.message.content;s.addAssistant(h);const m=e.finalize(h);Jt(m,n,{options:i,recorder:a}),n[z.LastResult]=m}return f=!1,{action:"continue"}}case y.Length:throw new Error("Incomplete model output due to `max_tokens` parameter or token limit");case y.FunctionCall:{let h=d.message;if(d.message&&s.addAssistant(h.content,h.toolCalls),h.toolCalls&&h.toolCalls.length>0){const m=await Zt(h.toolCalls,e,{recorder:a});a?.debug?.log(m),s.addTools(m),f=!0}else f=!1;break}}if(d.type!=="success")throw a?.debug?.log(d),new Error("Unexpected response type")}return{action:"continue"}}c(Yt,"executeChatAction");async function Zt(t,e,s={}){const{recorder:r}=s,o=[];for(const n of t)o.push(new Promise((i,a)=>{const u=e.tools[n.name];if(!u){a(`Tool not found: ${n.name}`);return}r?.debug?.heading.log(`Executing tool ${u.name}`);let l={};try{l=typeof n.arguments=="string"?JSON.parse(n.arguments):n.arguments}catch{a(`argument for tool ${n.name} is not valid: ${JSON.stringify(n.arguments)}`)}u.execute(l).then(f=>{r?.debug?.log(`Complete tool ${u.name}: ${n.id}`),i({id:n.id,name:n.name,content:JSON.stringify(f)})}).catch(a)}));return Promise.all(o)}c(Zt,"executeToolCalls");function Qt(t){const e=[];for(const[s,r]of Object.entries(t))e.push(r.schema);return e}c(Qt,"getToolSchemas");class jt{static{c(this,"TaskRegistry")}handlers=new Map;register(e){this.handlers.set(e.taskType,e)}getHandler(e){return this.handlers.get(e.type)}hasHandler(e){return this.handlers.has(e.type)}async executeTask(e){const{task:s}=e,r=s.type,o=this.getHandler(s);if(!o)throw new Error(`No handler registered for action type: ${r}`);if(!o.canHandle(s))throw new Error(`Handler found but action does not match expected format: ${r}`);await o.execute(e)}}function Vt(){const t=new jt;return t.register(new zt),t}c(Vt,"createBaseRegistry");function es(){const t=Vt();return t.register(new Kt),t}c(es,"createNodeRegistry");const ee=c((t,...e)=>{const s=c(async o=>{const{recorder:n}=o;let i=[];return"steps"in t?i=await q(t,{recorder:n}):i=[t,...e],i},"prepare");return{execute:c(async o=>{const{provider:n,variables:i,options:a,stats:u,recorder:l,name:f}=o,_=crypto.randomUUID(),d=es();l?.info?.log({type:"task",id:_,status:I.Running,message:`[${A(_,f)}] Starting job`});try{const h=await s({recorder:l}),m=new be;for(const[S,T]of h.entries()){l?.info?.log({type:"task",id:_,status:I.Running,message:`[${A(_,f)}] Processing step ${S+1}: ${T.type}`});try{await d.executeTask({task:T,chat:m,provider:n,variables:i,options:a,stats:u,recorder:l})}catch(v){throw v instanceof E?v:new te(`Error executing task ${T.type}`,{id:_,taskType:T.type,taskIndex:S,cause:v instanceof Error?v:new Error(String(v))})}}return l?.info?.log({type:"task",status:I.Success,id:_,message:`[${A(_,f)}] Completed ${h.length} steps`}),K(i[z.LastResult],u)}catch(h){const m=h instanceof E?h:new E("Serial workflow execution failed",{id:_,cause:h instanceof Error?h:new Error(String(h))});return l?.info?.log({type:"task",status:I.Fail,id:_,message:`[${A(_,f)}] Failed: ${m.message}`}),l?.error.log(m),J(m,i[z.LastResult],u)}},"execute")}},"serialWorkflow"),ye=c((t,...e)=>{const s=c(async o=>{const{recorder:n}=o;let i=[],a=null;if("batch"in t){const u=t;a=await me(u),i=await q(u,{recorder:n})}else a=t,i=[...e];return[a,i]},"prepare");return{execute:c(async o=>{const{provider:n,variables:i,options:a,stats:u,recorder:l,name:f}=o,_=crypto.randomUUID();try{const[d,h]=await s({recorder:l}),m=await d.plan(h);if(l?.debug?.heading.log("Runs",m),m.length===0)return l?.info?.log("No runs to execute"),K([],u);let S=0;l?.info?.log({type:"task",status:I.Running,id:_,message:`[${A(_,"CRW")}] Working on 0/${m.length}`});const T=c(async(R,Y)=>{try{return await ee(...R.tasks).execute({provider:n,variables:{...R.variables,...i},options:a,stats:u,recorder:l,name:`${f}-${Y}`})}catch(M){const se=M instanceof E?M:new E("Error executing run",{cause:M instanceof Error?M:new Error(String(M))});return l?.error?.log(se),J(se,null,u)}finally{S++,l?.info?.log({type:"task",status:I.Running,id:_,message:`[${A(_,"CRW")}] Working on ${S}/${m.length}`})}},"executeRun"),v=5;let b=[];for(let R=0;R<m.length;R+=v){const Y=m.slice(R,R+v),M=await Promise.all(Y.map(T));b=b.concat(M)}const k=b.some(qt);l?.info?.log({type:"task",status:k?I.PartialSuccess:I.Success,id:_,message:`[${A(_,"CRW")}] All jobs (${m.length}) completed${k?" with some errors":""}`});const $=b.map(R=>R.response);return K($,u)}catch(d){const h=d instanceof E?d:new E("Concurrent workflow execution failed",{id:_,cause:d instanceof Error?d:new Error(String(d))});return l?.error?.log(h),J(h,null,u)}},"execute")}},"concurrentWorkflow");class ts{static{c(this,"DAGParser")}static parse(e){const s=new Map;for(const[o,n]of Object.entries(e)){const i=this.parseNodeDefinition(o,n);s.set(o,i)}return this.validateDependencies(s),this.checkForCycles(s),{stages:this.createExecutionStages(s),nodes:s}}static parseNodeDefinition(e,s){if(this.isSimpleTask(s))return{id:e,tasks:Array.isArray(s)?s:[s],dependencies:[],executionType:"serial"};if(this.isConcurrentNodeDefinition(s)){const i=s,a=i.dependsOn?F(i.dependsOn):[];return{id:e,tasks:i.tasks,dependencies:a,planner:i.planner,executionType:"concurrent"}}const r=s,o=r.dependsOn?F(r.dependsOn):[],n=F(r.task);return{id:e,tasks:n,dependencies:o,executionType:"serial"}}static isSimpleTask(e){return e.type||Array.isArray(e)}static isConcurrentNodeDefinition(e){return e&&typeof e=="object"&&"planner"in e}static validateDependencies(e){for(const s of e.values())for(const r of s.dependencies)if(!e.has(r))throw new E(`Node "${s.id}" depends on non-existent node "${r}"`)}static checkForCycles(e){const s=new Set,r=new Set,o=c(n=>{if(r.has(n))return!0;if(s.has(n))return!1;s.add(n),r.add(n);const i=e.get(n);for(const a of i.dependencies)if(o(a))return!0;return r.delete(n),!1},"hasCycle");for(const n of e.keys())if(o(n))throw new E(`Circular dependency detected involving node "${n}"`)}static createExecutionStages(e){const s=[],r=new Set,o=new Set(e.keys());for(;o.size>0;){const n=[];for(const i of o)e.get(i).dependencies.every(l=>r.has(l))&&n.push(i);if(n.length===0)throw new E("Unable to resolve DAG dependencies - possible circular reference");s.push(n),n.forEach(i=>{r.add(i),o.delete(i)})}return s}}class ss{static{c(this,"DAGJobToDefinition")}static async convert(e,s){const{recorder:r}=s,o={};for(const[n,i]of Object.entries(e)){const{dependsOn:a,...u}=i;if("batch"in u){const l=u,f=await me(l),_=await q(l,{recorder:r}),d={planner:f,tasks:_,...a?{dependsOn:a}:{}};o[n]=d}else{const l=await q(u,{recorder:r});if(a){const f={task:l,dependsOn:a};o[n]=f}else o[n]=l}}return o}}async function ns(t,e,s,r={}){const{variables:o}=s,n=e.nodes.get(t);try{let i;if(n.executionType==="concurrent"&&n.planner?i=await ye(n.planner,...n.tasks).execute({...s,variables:o,name:t}):i=await ee(...n.tasks).execute({...s,variables:o,name:t}),!i.success)throw new E(`Node "${t}" failed: ${i.error?.message}`);return i.response}catch(i){if(!r.continueOnError)throw i;return null}}c(ns,"executeNode");const rs=c((t,e={})=>{const s=c(async(o,n)=>{const{recorder:i}=n,a={value:""};return fe(o,a)?await ss.convert(o,n):(i?.warn?.log(a),o)},"prepare");return{execute:c(async o=>{const{stats:n,recorder:i}=o,{maxConcurrency:a=3}=e,u=crypto.randomUUID();try{const l=await s(t,{recorder:i});i?.debug?.log(l);const f=ts.parse(l),_=new Map;i?.info?.log({type:"task",id:u,status:I.Running,message:`[${A(u)}] Starting workflow execution with ${f.stages.length} stages`});for(const[h,m]of f.stages.entries()){i?.info?.log({type:"task",id:u,status:I.Running,message:`[${A(u)}] Stage ${h+1}/${f.stages.length}, executing ${m.length} nodes: ${m.join(", ")}`});const S=Math.min(m.length,a);for(let T=0;T<m.length;T+=S){const v=m.slice(T,T+S);(await Promise.all(v.map(async k=>{const $=await ns(k,f,o,e);return{nodeId:k,result:$}}))).forEach(({nodeId:k,result:$})=>{_.set(k,$)})}}i?.info?.log({type:"task",status:I.Success,id:u,message:`[${A(u)}] Workflow execution completed successfully`});const d=Object.fromEntries(_);return K(d,n)}catch(l){const f=l instanceof E?l:new E("DAG workflow execution failed",{id:u,cause:l instanceof Error?l:new Error(String(l))});return i?.info?.log({type:"task",status:I.Fail,id:u,message:`[${A(u)}] Workflow execution failed: ${f.message}`}),i?.error?.log(f),J(f,null,n)}},"execute")}},"dagWorkflow");export{E as A,_e as D,G as I,P as L,ct as R,I as T,j as W,ge as a,ut as b,ye as c,rs as d,de as e,at as g,ht as i,X as l,ee as s};
