var W=Object.defineProperty;var o=(t,e)=>W(t,"name",{value:e,configurable:!0});import{randomUUID as H}from"node:crypto";import _ from"yaml";import{glob as P}from"glob";import{access as O,mkdir as S,writeFile as T,appendFile as X,readFile as v}from"node:fs/promises";import z from"@anthropic-ai/sdk";import{resolve as N,dirname as Y}from"node:path";import Q from"openai";import w from"chalk";import Z from"spinnies";function I(t){return Array.isArray(t)?t:[t]}o(I,"arrayify");function h(t){return typeof t=="string"?t:JSON.stringify(t,null,2)}o(h,"stringify");function b(t){return t.slice(0,8)}o(b,"friendly");function j(t){return new Promise(e=>setTimeout(e,t))}o(j,"delay");const C="./logs/";class V{static{o(this,"Writer")}time;constructor(e){this.time=e}get filename(){return`${C}${this.time}.log`}async setup(){try{await O(C)}catch{await S(C)}await T(this.filename,`AXLE: New run at ${this.time}
`)}async write(e){e=`${new Date().toISOString()}> ${e}
`,await X(this.filename,e)}}class ee{static{o(this,"Logger")}instanceId=new Date().toISOString();spinnies=new Z({color:"white",succeedColor:"white"});opts={debug:!1};writer=null;async initWriter(){this.writer=new V(new Date().toISOString()),await this.writer.setup()}setOptions(e){this.opts={debug:e.debug??!1}}get progress(){return{add:o((e,n)=>{this.spinnies.add(e,{text:n}),this.writer?.write(n)},"add"),update:o((e,n)=>{this.spinnies.update(e,{text:n}),this.writer?.write(n)},"update"),succeed:o((e,n)=>{this.spinnies.succeed(e,{text:n}),this.writer?.write(n)},"succeed"),fail:o((e,n)=>{this.spinnies.fail(e,{text:n}),this.writer?.write(n)},"fail")}}get info(){return{group(e){const n=h(e);console.log(`
${w.blue("==>")} ${w.whiteBright.bold(n)}`),this.writer?.write(n)},log:o(e=>{const n=h(e);console.log(h(e)),this.writer?.write(n)},"log")}}get debug(){const e=this.opts;return{group(n){const s=h(n);e.debug&&console.log(`
${w.gray("==>")} Debug: ${s}`),this.writer?.write(s)},log:o(n=>{const s=h(n);e.debug&&console.log(w.gray(s)),this.writer?.write(s)},"log")}}}const l=new ee;async function F(t,e,n="File"){let s=null,i="";if(t)try{i=N(t),s=await v(i,{encoding:"utf-8"})}catch{throw new Error(`${n} not found, see --help for details`)}else{for(const a of e.formats)try{i=N(e.name+"."+a),s=await v(i,{encoding:"utf-8"});break}catch{continue}if(s===null)throw new Error(`${n} not found, see --help for details`)}return{content:s,format:i.split(".").pop()??""}}o(F,"loadFile");function te(t,e){t=t.replace("**/*","**");const n=/(?<asterisks>\*{1,2})(?<extension>\.[^\\/]+)?/,s=t.match(n);if(s){let i="";return s.groups?.asterisks.length==1?i+=e.fileNameStem:i+=e.directoryPath+e.fileNameStem,s.groups?.extension?i+=s.groups.extension:i+=e.fileExtension,t.replace(s[0],i)}return t}o(te,"replaceFilePattern");function ne(t){const e=/(?<name>[^\\/]+)(?<extension>\.[^\\/]+)$/,n=t.match(e);return n&&n.length>0&&n.groups?{absolutePath:t,directoryPath:t.replace(n[0],""),fileExtension:n.groups.extension,fileNameStem:n.groups.name,fullFileName:n[0]}:null}o(ne,"pathToComponents");async function se(t,e="."){try{return(await P(`${e}/${t}.*`)).length>0}catch{return!1}}o(se,"fileExists");async function L(t){const e=Y(t);try{await O(e)}catch{await S(e),await L(e)}}o(L,"ensureDirectoryExistence");async function ie(t,e){await L(t),await T(t,e)}o(ie,"writeFileWithDirectories");const oe="ax.job",ae=["yaml","yml","json"];async function re(t,e){const{content:n,format:s}=await F(t,{name:oe,formats:ae},"Job File");let i=null;if(s==="json")i=JSON.parse(n);else if(s==="yaml"||s==="yml")i=_.parse(n);else throw new Error("Invalid job file format");l.debug?.group("The Job Object"),l.debug?.log(i);const a={value:""};if(ue(i,a))return i;throw new Error(`The job file is not valid: ${a.value}`)}o(re,"getJobConfig");function ue(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(!le(t.using,e))return e&&(e.value=`Invalid 'using' property: ${e?.value}`),!1;if(!t.jobs||typeof t.jobs!="object")return e&&(e.value="Missing or invalid 'jobs' property"),!1;for(const[n,s]of Object.entries(t.jobs))if(!me(s,e))return e&&(e.value=`Invalid job '${n}': ${e?.value}`),!1;return!0}o(ue,"isJobConfig");function le(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine==="openai"?fe(t,e):t.engine==="anthropic"?ce(t,e):t.engine==="ollama"?pe(t,e):(e&&(e.value="Invalid engine type. Must be 'openai', 'anthropic', or 'ollama'"),!1)}o(le,"isUsing");function fe(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="openai"?(e&&(e.value="Engine must be 'openai'"),!1):t["api-key"]!==void 0&&typeof t["api-key"]!="string"?(e&&(e.value="Property 'api-key' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}o(fe,"isOpenAIUse");function ce(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="anthropic"?(e&&(e.value="Engine must be 'anthropic'"),!1):t["api-key"]!==void 0&&typeof t["api-key"]!="string"?(e&&(e.value="Property 'api-key' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}o(ce,"isAnthropicUse");function pe(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.engine!=="ollama"?(e&&(e.value="Engine must be 'ollama'"),!1):t.url!==void 0&&typeof t.url!="string"?(e&&(e.value="Property 'url' must be a string"),!1):t.model!==void 0&&typeof t.model!="string"?(e&&(e.value="Property 'model' must be a string"),!1):!0}o(pe,"isOllamaUse");function me(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.type==="agent"?ye(t,e):t.type==="batch"?D(t,e):(e&&(e.value="Job type must be 'agent' or 'batch'"),!1)}o(me,"isJob");function ye(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="agent")return e&&(e.value="Job type must be 'agent'"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const n of t.tools)if(typeof n!="string")return e&&(e.value="All tools must be strings"),!1}if(t.variables!==void 0){if(typeof t.variables!="object"||Array.isArray(t.variables))return e&&(e.value="Property 'variables' must be an object"),!1;for(const[n,s]of Object.entries(t.variables))if(typeof s!="string")return e&&(e.value=`Variable '${n}' must be a string`),!1}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let n=0;n<t.steps.length;n++)if(!U(t.steps[n],e))return e&&(e.value=`Invalid step at index ${n}: ${e?.value}`),!1;return!0}o(ye,"isAgentJob");function D(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.type!=="batch")return e&&(e.value="Job type must be 'batch'"),!1;if(t.tools!==void 0){if(!Array.isArray(t.tools))return e&&(e.value="Property 'tools' must be an array"),!1;for(const n of t.tools)if(typeof n!="string")return e&&(e.value="All tools must be strings"),!1}if(t.variables!==void 0){if(typeof t.variables!="object"||Array.isArray(t.variables))return e&&(e.value="Property 'variables' must be an object"),!1;for(const[n,s]of Object.entries(t.variables))if(typeof s!="string")return e&&(e.value=`Variable '${n}' must be a string`),!1}if(!Array.isArray(t.batch))return e&&(e.value="Property 'batch' must be an array"),!1;for(let n=0;n<t.batch.length;n++){const s=t.batch[n];if(!s||typeof s!="object")return e&&(e.value=`Batch item at index ${n} must be an object`),!1;if(s.type!=="files")return e&&(e.value=`Batch item at index ${n} must have type 'files'`),!1;if(typeof s.input!="string")return e&&(e.value=`Batch item at index ${n} must have a string 'input' property`),!1;if(s["skip-condition"]!==void 0){if(!Array.isArray(s["skip-condition"]))return e&&(e.value=`Batch item at index ${n} must have an array 'skip-condition' property`),!1;for(let i=0;i<s["skip-condition"].length;i++)if(!de(s["skip-condition"][i],e))return e&&(e.value=`Invalid skip condition at index ${i} in batch item ${n}: ${e?.value}`),!1}}if(!Array.isArray(t.steps))return e&&(e.value="Property 'steps' must be an array"),!1;for(let n=0;n<t.steps.length;n++)if(!U(t.steps[n],e))return e&&(e.value=`Invalid step at index ${n}: ${e?.value}`),!1;return!0}o(D,"isBatchJob");function de(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.folder!="string"?(e&&(e.value="Property 'folder' must be a string"),!1):typeof t.contains!="string"?(e&&(e.value="Property 'contains' must be a string"),!1):!0}o(de,"isSkipOptions");function U(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):!t.action||typeof t.action!="string"?(e&&(e.value="Step must have a string 'action' property"),!1):t.action==="chat"?x(t,e):t.action==="tool-call"?J(t,e):t.action==="tool-respond"?$(t,e):t.action==="write-to-disk"?M(t,e):t.action==="save-to-variables"?R(t,e):(e&&(e.value=`Unknown action type: ${t.action}`),!1)}o(U,"isStep");function x(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(t.action!=="chat")return e&&(e.value="Action must be 'chat'"),!1;if(typeof t.content!="string")return e&&(e.value="Property 'content' must be a string"),!1;if(t.system!==void 0&&typeof t.system!="string")return e&&(e.value="Property 'system' must be a string"),!1;if(t.replace!==void 0){if(!Array.isArray(t.replace))return e&&(e.value="Property 'replace' must be an array"),!1;for(let n=0;n<t.replace.length;n++)if(!ge(t.replace[n],e))return e&&(e.value=`Invalid replace at index ${n}: ${e?.value}`),!1}return!0}o(x,"isChatAction");function J(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="tool-call"?(e&&(e.value="Action must be 'tool-call'"),!1):Array.isArray(t.toolCalls)?t.throttle!==void 0&&typeof t.throttle!="number"?(e&&(e.value="Property 'throttle' must be a number"),!1):!0:(e&&(e.value="Property 'toolCalls' must be an array"),!1)}o(J,"isToolAction");function $(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="tool-respond"?(e&&(e.value="Action must be 'tool-respond'"),!1):Array.isArray(t.toolCalls)?!0:(e&&(e.value="Property 'toolCalls' must be an array"),!1)}o($,"isToolRespondAction");function M(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="write-to-disk"?(e&&(e.value="Action must be 'write-to-disk'"),!1):typeof t.output!="string"?(e&&(e.value="Property 'output' must be a string"),!1):!0}o(M,"isWriteToDiskAction");function R(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):t.action!=="save-to-variables"?(e&&(e.value="Action must be 'save-to-variables'"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}o(R,"isSaveVarAction");function ge(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source==="variables"?q(t,e):t.source==="file"?he(t,e):t.source==="many-files"?ve(t,e):t.source===void 0?q(t,e):(e&&(e.value="Property 'source' must be 'variables', 'file', or 'many-files'"),!1)}o(ge,"isReplace");function q(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source!==void 0&&t.source!=="variables"?(e&&(e.value="Property 'source' must be 'variables' or undefined"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}o(q,"isReplaceVariables");function he(t,e){return!t||typeof t!="object"?(e&&(e.value="Not an object"),!1):typeof t.pattern!="string"?(e&&(e.value="Property 'pattern' must be a string"),!1):t.source!=="file"?(e&&(e.value="Property 'source' must be 'file'"),!1):typeof t.name!="string"?(e&&(e.value="Property 'name' must be a string"),!1):!0}o(he,"isReplaceFile");function ve(t,e){if(!t||typeof t!="object")return e&&(e.value="Not an object"),!1;if(typeof t.pattern!="string")return e&&(e.value="Property 'pattern' must be a string"),!1;if(t.source!=="many-files")return e&&(e.value="Property 'source' must be 'many-files'"),!1;if(typeof t.name!="string"&&!Array.isArray(t.name))return e&&(e.value="Property 'name' must be a string or an array of strings"),!1;if(Array.isArray(t.name)){for(let n=0;n<t.name.length;n++)if(typeof t.name[n]!="string")return e&&(e.value=`Name at index ${n} must be a string`),!1}return!0}o(ve,"isReplaceManyFiles");var c=(t=>(t[t.Stop=0]="Stop",t[t.Length=1]="Length",t[t.FunctionCall=2]="FunctionCall",t[t.Error=3]="Error",t))(c||{});async function B(t,e){try{const n=await v(e.name,"utf-8");t=t.replace(e.pattern,n)}catch(n){console.error(n)}return t}o(B,"fileReplacer");async function G(t,e){try{const n=I(e.name);let s="";for(const i of n){const a=await P(i);l.debug.log(`many-files parser. For glob "${i}", found ${a.length} files.`);const u=await Promise.all(a.map(async f=>{const r=await v(f,"utf-8");return f+`:
`+r}));s+=u.join(`
`)}t=t.replace(e.pattern,s)}catch(n){console.error(n)}return t}o(G,"manyFilesReplacer");function we(t,e){for(const[n,s]of Object.entries(e))t=t.replace(/\$\{(.*?)\}/g,(i,a)=>e[a]||"");return t}o(we,"replaceVariables");var g=(t=>(t.Latest="latest",t))(g||{});async function be(t){const{step:e,chat:n,provider:s,stats:i,variables:a,options:u}=t;if(x(e)){let{content:p,system:m}=e;e.replace&&([p,m]=await Ae(e.replace,a,e.content,e.system)),m&&n.addSystem(m),n.addUser(p)}else if($(e)){const m=a[g.Latest].map(d=>({id:d.id,content:JSON.stringify(d.results)}));n.addTools(m)}if(u?.dryRun)return l.debug.log(n),{action:"continue"};const r=await s.createChatCompletionRequest(n).execute();if(i.in+=r.usage.in,i.out+=r.usage.out,r.type==="success")switch(r.reason){case c.Stop:return r.message.content&&(n.addAssistant(r.message.content),a[g.Latest]=r.message.content),{action:"continue"};case c.Length:return{action:"error",error:new Error("Incomplete model output due to `max_tokens` parameter or token limit")};case c.FunctionCall:{let p=r.message;return r.message.content&&(n.addAssistant(p.content,p.toolCalls),a[g.Latest]=r.message.content),{action:"toolCall",toolCalls:p.toolCalls}}}if(l.debug.log(r),r.type==="error")return{action:"error",error:new Error(r.error.message)}}o(be,"executeChatAction");async function Ae(t,e,n,s){for(const i of t)switch(i.source){case"file":n=await B(n,i),s&&(s=await B(s,i));break;case"many-files":n=await G(n,i),s&&(s=await G(s,i));break;default:n=n.replace(i.pattern,e[i.name]),s&&(s=s.replace(i.pattern,e[i.name]))}return[n,s]}o(Ae,"handleReplace");async function ke(t){const{action:e,variables:n,options:s}=t;if(s.dryRun){l.debug.log("Dry run: no action was taken");return}const i=e.output,a=n[g.Latest];if(typeof a=="string"){let u="";i.includes("*")?u=te(i,n.file):u=we(i,n),await ie(u,a)}}o(ke,"execWriteToDisk");function Ce(t){const{action:e,variables:n,options:s}=t;if(s.dryRun){l.debug.log("Dry run: no action was taken");return}const i=n[g.Latest];typeof i=="string"&&(n[e.name]=i)}o(Ce,"execSaveToVariables");async function xe(t){const{step:e,toolManager:n,variables:s}=t,i=e.toolCalls,a=[];for(const f of i)a.push(new Promise((r,p)=>{const m=n.tools[f.name];if(!m){p(`Tool not found: ${f.name}`);return}m(f.arguments).then(d=>r({id:f.id,results:d})).catch(p)}));const u=await Promise.all(a);s[g.Latest]=u,l.debug.log(u)}o(xe,"executeToolAction");class $e{static{o(this,"Chat")}system;messages=[];tools=[];setToolSchemas(e){this.tools=e}addSystem(e){this.system=e}addUser(e){this.messages.push({role:"user",content:e})}addAssistant(e,n){this.messages.push({role:"assistant",content:e,toolCalls:n})}addTools(e){this.messages.push({role:"tool",content:e})}toOpenAI(){const e=[];this.system&&e.push({role:"system",content:this.system});const n=this.tools.length>0?this.tools.map(i=>({type:"function",function:i})):void 0,s=this.messages.map(i=>{switch(i.role){case"tool":return i.content.map(a=>({role:"tool",tool_call_id:a.id,content:a.content}));case"assistant":return{role:i.role,content:i.content,tool_calls:i.toolCalls.map(a=>({id:a.id,type:"function",function:{name:a.name,arguments:JSON.stringify(a.arguments)}}))};default:return{role:i.role,content:i.content}}}).flat(1/0);return{messages:[...e,...s],...n&&{tools:n}}}toAnthropic(){const e=this.messages.map(s=>{switch(s.role){case"assistant":const i=[];return i.push({type:"text",text:s.content}),s.toolCalls&&i.push(...s.toolCalls.map(a=>({type:"tool_use",id:a.id,name:a.name,input:a.arguments}))),{role:"assistant",content:i};case"tool":return{role:"user",content:s.content.map(a=>({type:"tool_result",tool_use_id:a.id,content:a.content}))};default:return{role:"user",content:s.content}}}),n=this.tools.map(s=>({name:s.name,description:s.description,input_schema:s.parameters}));return{system:this.system,messages:e,tools:n}}toString(){return JSON.stringify({system:this.system,messages:this.messages,tools:this.tools})}}class Ee{static{o(this,"DynamicArrayIterator")}array;index=0;constructor(e){this.array=[...e]}*[Symbol.iterator](){for(;this.index<this.array.length;)yield[this.index,this.array[this.index]],this.index++}addItem(e){this.array.splice(this.index+1,0,e)}get length(){return this.array.length}}async function _e(t,e,n,s,i,a){const u=H(),{steps:f}=t;l.progress.add(u,`[${b(u)}] Starting job`);const r=new $e;if(t.tools){const d=n.getSchemas(t.tools);r.setToolSchemas(d)}if(t.variables)for(const[d,y]of Object.entries(t.variables))s[d]=y;let p=!1;const m=new Ee(f);for(const[d,y]of m)if(l.progress.update(u,`[${b(u)}] Processing step ${d+1}: ${y.action}`),x(y)||$(y)){const{action:A,error:E,toolCalls:k}=await be({step:y,chat:r,provider:e,stats:a,variables:s,options:i});E&&(p=!0,console.error(E)),A=="toolCall"&&k&&(m.addItem({action:"tool-respond",toolCalls:k}),m.addItem({action:"tool-call",toolCalls:k}))}else if(J(y))try{await xe({step:y,toolManager:n,variables:s,options:i})}catch(A){p=!0,console.error(A)}else R(y)?Ce({action:y,variables:s,options:i}):M(y)&&await ke({action:y,variables:s,options:i});return p?l.progress.fail(u,`[${b(u)}] Failed`):l.progress.succeed(u,`[${b(u)}] completed ${m.length} steps`),{response:s[g.Latest],stats:a}}o(_e,"executeAgentCommand");const Pe="ax.config",Oe=["yaml","yml","json"];async function Se(t,e){const{content:n,format:s}=await F(t,{name:Pe,formats:Oe},"Config File");let i=null;if(s==="json")i=JSON.parse(n);else if(s==="yaml"||s==="yml")i=_.parse(n);else throw new Error("Invalid config file format");l.debug.group("The Config Object"),l.debug.log(i);const a={value:""};if(Te(i,a))return i;throw new Error(a.value)}o(Se,"getProviderConfig");function Te(t,e){if(typeof t!="object"||t===null)return e&&(e.value="Config: must be a non-null object"),!1;if("openai"in t){const n=t.openai;if(typeof n!="object"||n===null)return e&&(e.value="Config: openai must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: openai.api-key must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: openai.model must be a string"),!1}if("anthropic"in t){const n=t.anthropic;if(typeof n!="object"||n===null)return e&&(e.value="Config: anthropic must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: anthropic.api-key must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: anthropic.model must be a string"),!1}if("ollama"in t){const n=t.ollama;if(typeof n!="object"||n===null)return e&&(e.value="Config: ollama must be an object"),!1;if("url"in n&&typeof n.url!="string")return e&&(e.value="Config: ollama.url must be a string"),!1;if("model"in n&&typeof n.model!="string")return e&&(e.value="Config: ollama.model must be a string"),!1}if("brave"in t){const n=t.brave;if(typeof n!="object"||n===null)return e&&(e.value="Config: brave must be an object"),!1;if(typeof n["api-key"]!="string")return e&&(e.value="Config: brave.api-key must be a string"),!1;if("delay"in n&&typeof n.delay!="number")return e&&(e.value="Config: brave.delay must be a number"),!1}return!0}o(Te,"isProviderConfig");function Ne(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("api-key"in t)||typeof t["api-key"]!="string")throw new Error("Missing or invalid 'api-key'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}o(Ne,"assertIsOpenAIProviderConfig");function Ie(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("api-key"in t)||typeof t["api-key"]!="string")throw new Error("Missing or invalid 'api-key'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}o(Ie,"assertIsAnthropicProviderConfig");function Fe(t){if(!t||typeof t!="object")throw new Error("Not an object");if(!("url"in t)||typeof t.url!="string")throw new Error("Missing or invalid 'url'");if(!("model"in t)||typeof t.model!="string")throw new Error("Missing or invalid 'model'")}o(Fe,"assertIsOllamaProviderConfig");const Le={CLAUDE_3_5_HAIKU_LATEST:"claude-3-5-haiku-latest"},De=Le.CLAUDE_3_5_HAIKU_LATEST;class Ue{static{o(this,"AnthropicProvider")}name="Anthropic";client;model;constructor(e,n){const s={"api-key":e["api-key"]||n["api-key"],model:e.model||n.model||De};try{Ie(s),this.model=s.model,this.client=new z({apiKey:s["api-key"]})}catch(i){throw new Error(`Invalid Anthropic configuration: ${i}`)}}createChatCompletionRequest(e){return new Je(this.client,this.model,e)}}class Je{static{o(this,"AnthropicChatRequest")}chat;client;model;constructor(e,n,s){this.client=e,this.model=n,this.chat=s}async execute(){const e={model:this.model,...this.chat.toAnthropic(),max_tokens:Me(this.model)};l.debug.log(e);let n;try{const s=await this.client.messages.create(e);n=Re(s)}catch(s){n={type:"error",error:{type:s.error.error.type??"Undetermined",message:s.error.error.message??"Unexpected error from Anthropic"},usage:{in:0,out:0},raw:s}}return l.debug.log(n),n}}function Me(t){switch(t){case"claude-3-5-sonnet-20240620":return 4096;case"claude-3-opus-20240229":return 4096;case"claude-3-sonnet-20240229":return 4096;case"claude-3-haiku-20240307":return 4096;default:return 4096}}o(Me,"getMaxTokens");function K(t){switch(t){case"max_tokens":return c.Length;case"end_turn":return c.Stop;case"stop_sequence":return c.Stop;case"tool_use":return c.FunctionCall;default:return c.Error}}o(K,"getStopReason$1");function Re(t){const e=K(t.stop_reason);if(e===c.Error)return{type:"error",error:{type:"Uncaught error",message:"Stop reason is not recognized."},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t};if(e===c.FunctionCall){const n=t.content[0],s=n.type==="text"?n.text:"",i=t.content.slice(1).map(a=>{if(a.type==="tool_use")return{id:a.id,name:a.name,arguments:a.input}}).filter(a=>a!==null);return{type:"success",id:t.id,model:t.model,reason:c.FunctionCall,message:{role:t.role,content:s,toolCalls:i},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}if(t.type=="message"){const n=t.content[0];if(n.type=="text")return{type:"success",id:t.id,model:t.model,reason:K(t.stop_reason),message:{role:t.role,content:n.text},usage:{in:t.usage.input_tokens,out:t.usage.output_tokens},raw:t}}}o(Re,"translate$1");const qe="http://localhost:11434";class Be{static{o(this,"OllamaProvider")}name="Ollama";url;model;constructor(e,n){const s={model:e.model??n.model,url:e.url??n.url??qe};try{Fe(s),this.url=s.url,this.model=s.model}catch(i){throw new Error(`Invalid Ollama configuration: ${i}`)}}createChatCompletionRequest(e){return new Ge(this.url,this.model,e)}}class Ge{static{o(this,"OllamaChatCompletionRequest")}chat;url;model;constructor(e,n,s){this.url=e,this.model=n,this.chat=s}async execute(){const e={model:this.model,messages:this.chat.toOpenAI().messages,stream:!1,options:{temperature:.7}};l.debug.log(e);let n;try{const s=await fetch(`${this.url}/api/chat`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);const i=await s.json();n={type:"success",id:`ollama-${Date.now()}`,model:this.model,reason:c.Stop,message:{role:"assistant",content:i.message?.content||""},usage:{in:i.prompt_eval_count||0,out:i.eval_count||0},raw:i}}catch(s){console.log(s),n={type:"error",error:{type:"OllamaError",message:s.message||"Unexpected error from Ollama"},usage:{in:0,out:0},raw:JSON.stringify(s)}}return l.debug.log(n),n}}const Ke={GPT_4_1:"gpt-4.1"},We=Ke.GPT_4_1;class He{static{o(this,"OpenAIProvider")}name="OpenAI";client;model;constructor(e,n){const s={"api-key":e["api-key"]||n["api-key"],model:e.model||n.model||We};try{Ne(s),this.model=s.model,this.client=new Q({apiKey:s["api-key"]})}catch(i){throw new Error(`Invalid OpenAI configuration: ${i}`)}}createChatCompletionRequest(e){return new Xe(this.client,this.model,e)}}class Xe{static{o(this,"OpenAIChatCompletionRequest")}chat;openai;model;constructor(e,n,s){this.openai=e,this.model=n||"gpt-4o",this.chat=s}async execute(){const e={model:this.model,...this.chat.toOpenAI()};l.debug.log(e);let n;try{const s=await this.openai.chat.completions.create(e);n=Ye(s)}catch(s){console.error(s),n={type:"error",error:{type:s.type??"Undetermined",message:s.message??"Unexpected error from OpenAI"},usage:{in:0,out:0},raw:s}}return l.debug.log(n),n}}function ze(t){switch(t){case"length":return c.Length;case"stop":return c.Stop;case"tool_calls":return c.FunctionCall;default:return c.Error}}o(ze,"getStopReason");function Ye(t){if(t.choices.length>0){const e=t.choices[0],n=e.message.tool_calls?.map(s=>({id:s.id,name:s.function.name,arguments:JSON.parse(s.function.arguments)}));return{type:"success",id:t.id,model:t.model,reason:ze(e.finish_reason),message:{content:e.message.content??"",role:e.message.role,toolCalls:n},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}return{type:"error",error:{type:"undetermined",message:"Unexpected response from OpenAI"},usage:{in:t.usage?.prompt_tokens??0,out:t.usage?.completion_tokens??0},raw:t}}o(Ye,"translate");function Qe(t,e,n){if(t.engine=="openai")return new He(e.openai,t);if(t.engine=="anthropic")return new Ue(e.anthropic,t);if(t.engine=="ollama")return new Be(e.ollama,t);throw new Error("AI Provider is invalid or not supported. Please check your job file.")}o(Qe,"getProvider");const Ze={name:"brave",description:"Perform a search using the Brave search engine",parameters:{type:"object",properties:{searchTerm:{type:"string",description:"The search term to query"}},required:["searchTerm"]}};function je(t=null){if(t&&t["api-key"]){const e=t["api-key"],n=t.delay;return{name:"braveSearch",schema:Ze,fn:Ve(e,n)}}return l.debug.log("Brave search API key not found in config"),null}o(je,"getBraveSearch");function Ve(t,e=void 0){let n=0;return async s=>{const{searchTerm:i}=s;if(l.debug.group(`Brave: searching for ${i}`),e){for(;Date.now()-n<e;)await j(e-(Date.now()-n));n=Date.now()}try{const a=t,u="https://api.search.brave.com/res/v1/web/search",f=new URL(u);f.searchParams.append("q",i),f.searchParams.append("format","json");const r=await fetch(f.toString(),{method:"GET",headers:{Accept:"application/json","X-Subscription-Token":a}});if(!r.ok)throw new Error(`HTTP error! status: ${r}`);return await r.json()}catch(a){throw console.error("Error fetching search results:",a),a}}}o(Ve,"createBraveSearch");function et(t,e){const n={},s={},i=je(t.brave);return i&&(n.brave=i.fn,s.brave=i.schema),{tools:n,schemas:s,getSchemas:o(u=>{const f=[];for(const r of u)s[r]&&f.push(s[r]);return f},"getSchemas")}}o(et,"getTools");export{l as D,et as a,I as b,Se as c,re as d,_e as e,se as f,Qe as g,D as i,ne as p};
